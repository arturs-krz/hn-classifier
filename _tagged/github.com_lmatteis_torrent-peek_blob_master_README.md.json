{
	"_id": "14130280",
	"site": "https://github.com/lmatteis/torrent-peek/blob/master/README.md",
	"title": " TorrentPeek â€“ Distributed search engines using BitTorrent and SQLite",
	"author": "sktrdie",
	"date": "2017-06-13T13:35:13.685Z",
	"tags": {
		"categories": [
			"opensource"
		],
		"languages": []
	},
	"content": "torrentnetdistributed search engines using bittorrent sqlitedistributed sites gained much attention lately systems such zeronet ipfs, seem improve older systems freenet.building search engines top these distributed systems is quite feasible yet users need download entire site database (usually several hundreds gigabytes large) before running queries against .torrentnet allows to build distributed search engines leveraging bittorrent network the sqlite database. users not to wait until site is fully downloaded before can query .how?site owners create sqlite database (.db file) create torrent this file. then proceed seed torrent -- like would seed other file.site users start downloading site torrent, , rather downloading pieces the torrent \"rarest \" order, download pieces based the search query performed. other words, given search query such \"indiana jones\", torrentnet knows download pieces the torrent where data \"indiana jones\" is likely be stored .hence, results are given users a timely manner, without having wait until entire database is downloaded.furthermore, since search queries are regular torrent piece downloads, search query be satisfied many different peers a swarm, effectively allowing distributed search engines.main featuresdistributed torrent sites, queryable demand prioritizing specific piece downloads.create distributed torrent sites accessible via public key (eg. 33cwte8iwwn7uhtj9mkcs4q5ax7b) are shared kept alive using bittorrent network.update site using mutable torrents extension (bep46) let users about site updates via dht network.build interactive sites are queryable demand using sqltorrent technique. things search engines, complex browsable experiences are possible.pros & consproshosting site is simple seeding torrent. need buy domain name a hosting server. can easily host torrent site your home network let users visiting site help with hosting.since control address (public key), is broadcast via dht, 's much harder governments institution block content 're sharing.via sqltorrent drive users experience letting only downloading pieces the torrent are relevant the users' interaction. essentially could create search engine, program interactions that submissions a search form result queries the underlying sqlite database - prioritizes pieces based the query.consread sites now. zeronet seems have solution this problem i'm convinced yet. site doesn't a pretty name. sharing public key be much harder sharing name a dns site. standards doing distributed sites. many different solutions (ipfs, zeronet, freenet, etc..). torrentpeek least follows of bittorrent specifications (using powerful libtorrent library) provides unique sql querying capabilities.sqltorrent putting sqlite database file (.db) inside torrent, can query content -- prioritizing pieces based the sql query -- quickly peek the content the database without downloading entirely.torrentpeek was inspired sqltorrent. video is worth 1000 words: https://www.youtube.com/watch?v=ekttt8pyu5m&feature=youtu.install currently works mac os x.simply npm install then run node index.js file.torrent ~/save_folder/ 8080, where last is port the ui will lunch app . make sure file.torrent contains sqlite database else wont ."
}