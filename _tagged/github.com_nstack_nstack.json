{
	"_id": "14096261",
	"site": "https://github.com/nstack/nstack",
	"title": " NStack â€“ Typed, composable microservices for data analytics",
	"author": "NickPollard",
	"date": "2017-06-13T13:35:27.771Z",
	"tags": {
		"categories": [
			"opensource",
			"microservices",
			"serverless",
			"type-safe",
			"composition",
			"dsl",
			"haskell",
			"containers",
			"data-analysis",
			"python"
		],
		"languages": [
			"haskell",
			"other"
		]
	},
	"content": "readme.md nstack: composable, typed streams microservices data analyticsintroductionnstack is compute platform is ideal data analytics it makes integrating data, publishing code, connecting all together really simple. can turn disparate data-sources -- such databases, 3rd-party apis, http endpoints -- streams typed records. can publish local code functions your cloud provider. streams be composed connected these functions using nstack's scripting language, nstack automates underlying infrastructure you focus data-science instead operations.nstack provides end--end software life-cycle management the data science process, including sharing reuse, reproducibility, versioning, runtime isolation.getting started the website more information, check the full documentation.intro screencastnstack is comprised a cli runs your machine, a virtual machine runs the cloud.cli installation nstack cli is available self-contained executable linux, windows, macos - binaries be downloaded our releases page.simply download nstack-cli-{linux64,win64,macos} your platform, uncompress, run nstack the terminal/command prompt.macos addition standalone download the releases page, have homebrew package can easily installed follows,$ brew tap nstack/nstack$ brew cask install nstack-clilinux also provide rpm deb packages the releases page will with common distros can installed via system package manager.rpm install# change {version} neededdnf install https://github.com/nstack/nstack/releases/v{version}/nstack-cli-{version}.x86_64.rpmdeb install# change {version} neededwget https://github.com/nstack/nstack/releases/v{version}/nstack-cli_{version}.amd64.debdpkg - nstack-cli_{version}.amd64.debapt- install -fcompiling sourcenstack is built using haskell, compile cli manually will need stack build tool.once is installed, run following commands the git project root,# stack setup needed first compilestack setupstack build nstack-cli# install user's local executable directorystack install nstack-cliserver installationpaasnstack offers free--charge paas (platform a service) demo , which means can try nstack without installing server. note the paas is intended a sandbox the environment is wiped daily 0600 utc. can register account immediately start using nstack using following command:nstack register <username> <email> will send an email your credentials instructions getting started.host own nstack server install own nstack server, provide self-contained appliance vm: ami aws ec2 (ami-53a47245) .raw disk image hosting your virtual machine choice also provide rpm installing directly a red hat- server. are available the releases page.examplesbasic example can express within nstack scripting language locally follows ( think it bash microservices).module demo:0.1.0 { import nstack.transformers:0.1.4 t import acme.classifiers:0.3.0 c // analytics workflow def workflow = sources.postgresql<(text, int)> | t.transform { strength = 5 } | c.classify { model = \"randomforest\" } | sinks.s3blob<text>} can build, deploy, start workflow an nstack server the nstack cli linux, macos, windows.> nstack buildbuilding demo:0.1.0> nstack start demo:0.1.0.workflowworkflow started process 3.more examples https://github.com/nstack/nstack-examples a range examples, you clone use immediately, includingdemos - basic examples demonstrate creating methods composing together workflowsnstack - selection nstack utility modules, including methods uploading s3 processing imagesiris - python-based classifier using scikit-leaarn showcases building more complex modules system dependencies in-built data-setsmovies - complex workflow composed multiple individual services processes movies data the imdb database, demonstrating composition, filtering, service configuration, partial workflow reuselicense contributinglicense nstack cli is open-source licensed under bsd3 license. nstack server is provided free--charge personal, hobbyist, non-commercial, evaluation . it is currently closed-source, however 'd to open more it over .contributing repo is currently mirror our internal , as development happens fairly rapidly.however welcome encourage both issues prs (prs require cla - described contributing.md).'re looking removing mirror working directly this public repo possible. do use nstack ?productionising modelsproductionise models the cloud without complex engineering, where can used workflows attached data-sources. instance, can build random forest classifier locally python, publish to cloud provider, connect to streaming system, database, data-lake, http endpoint under 10 minutes.data integrationtransform disparate disconnected data-sources -- such 3rd-party apis, legacy infrastructure, databases -- streams typed, structured records, can composed together. instance, could set a workflow the cloud pipes twitter ads api your data lake ( even some modelling python -transit) under 5 minutes.featurestyped strongly-type infrastructure microservices make composable securestreaming move batch workloads existing code a streaming paradigm, without complex infrastructurefast really fast throughout using latest developments the linux kernelserverless modules are deployed serverless, containerised, versioned, fully reproducible microservicescomposable compose infrastructure a statically typed workflow language automate operationsconceptsmodules module is piece code has been published nstack -- instance, python class. modules are comprised one more functions -- the same a class python has or more methods it. modules have dependencies, files operating system packages -- instance, training data, the scikit-learn package.functionsfunctions are \"serverless\" functions live modules -- instance, predict method your python class. functions nstack are typed, means define kind data can as input, the kind data output. instance, can that predict method takes text returns integer. is important it means can safely composed together reused, the nstack platform guaranteeing type safety.sources & sinks source is something emits stream data. sink is something can receive stream data. examples sources sinks are databases, files, message-queues, http endpoints. modules, can define input output types your sources sinks.workflowsmodules, sources, sinks be combined -- composed -- together build workflows. is accomplished using nstack workflow language, simple bash- scripting language connecting streams functions together.processes a workflow is started is running the cloud, becomes process."
}