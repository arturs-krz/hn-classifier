{
	"_id": "14307497",
	"site": "https://github.com/snoack/mypass",
	"title": " A password manager that can conveniently be used from the command line",
	"author": "wallunit",
	"date": "2017-06-13T13:08:56.997Z",
	"tags": {
		"categories": [
			"opensource"
		],
		"languages": [
			"python",
			"javascript",
			"html"
		]
	},
	"content": "readme.md mypass password manager can used conviniently the command line. prefer command line the gui, the lack password managers serve use case, motivated to write own. also comes a browserextension order conviniently securely fill logins the web.installation debian/ubuntu package is available the author's ppa, can installed runningfollowing commands ( root):add-apt-repository ppa:s.noack/ppaapt- updateapt- install mypassusing pip sure have python 3, pip git installed. run followingcommand ( root):pip3 install git+https://github.com/snoack/mypassusage you run of commands below, will prompted the passhprase decrypt/encrypt credentials . if encrypted file doesn't exist yet, will created you store credentials the time. default, daemon is spawned shuts down 30 minutes inactivity, that don't to enter passphrase again performing multipleactions within period.mypass add <context> [<username>] [<password>]stores credentials the given context. context be unique keyword you relate these credentials. if credentials are a website, is recommended use correspondingdomain context, that browser extension finds credentials, below. username is optional, specifying username there is , allows to store multiple username/password pairs the same context. , if usernameis given, will used the browser extension filling web forms. password is omitted will prompted the password. passing password the command line is recommeded, except import scripts, it end in shell's history.mypass <context> [<username>]same mypass add, stores new random secure password prints .mypass <context>prints credentials the given context.mypass listprints each context ( per line) any credentials been stored .in order filter list, pipe output programs grep.mypass remove <context> [<username>]deletes credentials the encrypted storage. username is given, this username the associated password is removed. username is omitted, whole context is wiped.mypass rename ---{context|username}=<newvalue> <context> [<username>]moves credentials around within encrypted storage.examplesrenaming context:mypass rename ---context=.example.com old.example.comchanging username example.com john rose:mypass rename ---username=rose example.com johnadding username a password has been stored without associated username:mypass rename ---username=rose example.commypass changepwprompts for new passphrase. existing credentials are re-encryptedusing passphrase.mypass lockforces daemon immediately shutdown, it is running, that 'd to enter passphrase again, now .configurationoptionally, can create config file under ~/.config/mypass, order override of following presets:[daemon]# set true, daemon won't spawn, you to enter # passphrase, credentials are encrypted , every .disabled = false# minutes inactivity which daemon shuts down, you # to enter passphrase, credentials are encrypted , again.timeout = 30[database]# path the encrypted file storing credentials.path = /home/user/.config/mypass/dbintegration chrome firefox you installed mypass debian/ubuntu the ppa above, next youstart chromium firefox, extension should active. can install extension the chrome web store. note while browserextension is optional, cannot used standalone requires commandline utility be installed well. extension adds button the browser bar when clicked, fills loginforms the active tab, the document's domain path (partially) match context any stored credentials. the document's url is https://www.example.com/foo/bar example, credentials following contexts are considered, this order:www.example.com/foo/barwww.example.com/foowww.example.comexample.com browser extension is intentionally kept simple doesn't provide functionality manage credentials. please the command line utility therefore."
}