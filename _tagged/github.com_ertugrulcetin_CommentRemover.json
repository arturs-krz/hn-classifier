{
	"_id": "14413498",
	"site": "https://github.com/ertugrulcetin/CommentRemover",
	"title": " Source Code Comment Remover for Java",
	"author": "ertucetin",
	"date": "2017-06-13T13:06:44.578Z",
	"tags": {
		"categories": [
			"opensource"
		],
		"languages": [
			"java"
		]
	},
	"content": "readme.md commentremovercommentremover is source code comment removing library java 7 above. also supports javascript , html , css , properties , jsp xml comments.commentremover does depend any libraries, can easily add as standalone .jar your classpath.requirementsprojects include commentremover need target java 1.7 minimum.please increase stack size 40m.vm option command is: -xss40m you need increase more -xss{size}minstallationmaven your pom.xml, must add repository dependency commentremover. adding dependency run mvn clean install command make sure maven clean install processes are completed.<repository> <id>jitpack.io</id> <url>https://jitpack.io</url></repository><dependency> <groupid>com.github.ertugrulcetin</groupid> <artifactid>commentremover</artifactid> <version>1.2</version></dependency> gradle your gradle file, must add repository dependency commentremover.repositories { maven { url \"https://jitpack.io\" }} dependencies { compile 'com.github.ertugrulcetin:commentremover:1.2'}usagepublic class internalpathexample { public static void main(string[] args) throws commentremoverexception { // root dir is: /users/user/projects/myproject // example startinternalpath commentremover commentremover = commentremover.commentremoverbuilder() .removejava(true) // remove java file comments.... .removejavascript(true) // remove javascript file comments.... .removejsp(true) // etc.. goes that .removetodos(false) // not touch todos (leave alone) .removesinglelines(true) // remove single line type comments .removemultilines(true) // remove multiple type comments .preservejavaclassheaders(true) // preserves class header comment .preservecopyrightheaders(true) // preserves copyright comment .startinternalpath(\"src.main.app\") // starts {rootdir}/src/main/app , leave empty string you to start root dir .setexcludepackages( string[]{\"src.main.java.app.pattern\"}) // refers {rootdir}/src/main/java/app/pattern skips directory .build(); commentprocessor commentprocessor = commentprocessor(commentremover); commentprocessor.start(); }}public class externalpathexample { public static void main(string[] args) throws commentremoverexception { // example externalinternalpath commentremover commentremover = commentremover.commentremoverbuilder() .removejava(true) // remove java file comments.... .removejavascript(true) // remove javascript file comments.... .removejsp(true) // etc.. .removetodos(true) // remove todos .removesinglelines(false) // not remove single line type comments .removemultilines(true) // remove multiple type comments .preservejavaclassheaders(true) // preserves class header comment .preservecopyrightheaders(true) // preserves copyright comment .startexternalpath(\"/users/user/projects/myotherproject\")// it full path external directories .setexcludepackages( string[]{\"src.main.java.model\"}) // refers /users/user/projects/myotherproject/src/main/java/model skips directory. .build(); commentprocessor commentprocessor = commentprocessor(commentremover); commentprocessor.start(); }}license copyright 2016 erturul Ã§etin licensed under apache license, version 2.0 ( \"license\"); may use file except compliance the license. may obtain copy the license http://www.apache.org/licenses/license-2.0 unless required applicable law agreed in writing, software distributed under license is distributed an \" is\" basis, without warranties conditions any kind, either express implied. the license the specific language governing permissions limitations under license."
}