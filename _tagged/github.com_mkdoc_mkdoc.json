{
	"_id": "14183083",
	"site": "https://github.com/mkdoc/mkdoc",
	"title": " Fast, streaming markdown processor",
	"author": "tmpfs",
	"date": "2017-06-13T13:33:35.300Z",
	"tags": {
		"categories": [
			"opensource",
			"markdown",
			"commonmark",
			"stream",
			"ast",
			"html",
			"xml",
			"man",
			"yaml"
		],
		"languages": [
			"javascript"
		]
	},
	"content": "readme.md markdown tools markdown documentscreates stream pipelines convert input commonmark an abstract syntax tree transforms tree; result is typically converted to markdown to another format such html, xml json.installnpm -g mkdocfeaturescommand line programmatic control.streaming build system, mktask.dsl including files, executing commands more, mkpi.comment parser 30+ languages, mkparse.fast, modular code good coverage.installfeaturesusagemodulescommand line toolsmkmkcatmkpimkmsgmkrefmkabsmkfiltermklevelmktransformmktocmkhighmkpagemkoutmkparsemkapiapidoclicenseusage example illustrates to create readme file this from source file some include files:var doc = require('mkdoc') , pi = require('mkpi') , ref = require('mkref') , abs = require('mkabs') , msg = require('mkmsg') , toc = require('mktoc') , = require('mkout');doc('doc/readme.md') // read markdown source document .pipe(pi()) // parse processing instructions, includes etc. .pipe(ref()) // include link references .pipe(abs()) // links absolute .pipe(msg()) // append generator message .pipe(toc()) // create inject table contents list .pipe(()) // convert abstract syntax tree markdown .pipe(process.stdout); // print document equivalent command line:mkcat doc/readme.md | mkpi | mkref | mkabs | mkmsg | mktoc | mkout the javascript version be faster it does need launch multiple processes does convert stream json.modulesdesigned be modular, brief overview:mktask is streaming build system.mkcat loads source markdown files.mkast is library converting tree nodes json.mkpi parses processing instructions runs macro functions.mkmsg injects message a stream.mkref injects link references a stream.mkabs makes links absolute.mktoc creates table contents list.mkfilter removes nodes the stream type.mklevel changes heading levels.mktransform add custom stream transformations the pipeline.mkout renders tree an output format (xml, html etc).mkparse parses comments source files.mkapi generates api documentation comments.command line toolsmkruns tasks build files, default searches mkdoc.js the current working directory parent directories.mk called no arguments a main task is available is invoked otherwise tasks are executed sequence.specified tasks are executed sequence:mk api readme the mkdoc.js file an example mktask information creating task functions.source code | cli helpmkcatreads or more markdown documents serializes to output stream, program is normally used the beginning a transform pipeline before being sent mkout:mkcat file.md | mkout --xml can accept input stdin:cat file.md | mkcat | mkouthowever is recommended file path information is lost is important some processing tools such mkpi uses file path resolve relative include files.source code | cli helpmkpiinclude markdown documents, source files the output commands:mkcat doc/readme.md | mkpi | mkout > readme.md program parses executes processing instructions such <? @include intro.md install.md ?>. can inline macro functions application-specific logic create custom macro functions may shared between projects, the mkpi docs more details.source code | cli helpmkmsgappends prepends document the stream:mkcat doc/readme.md | mkpi | mkmsg | mkout > readme.mdtypically used append generator message may used inject document the beginning end the stream.source code | cli helpmkrefcollates link references appends to stream.mkcat doc/readme.md | mkpi | mkref | mkout > readme.mdsource code | cli helpmkabs relative links absolute using data package.json no base url is given.mkcat doc/readme.md | mkpi | mkref | mkabs | mkout > readme.mdsource code | cli helpmkfilterfilters nodes type a stream. remove headings a document:mkcat doc/readme.md | mkfilter --heading | mkoutremove everything code blocks a document:mkcat doc/readme.md | mkfilter --code-block --invert | mkoutsource code | cli helpmklevelconverts heading levels, this indent outdent headings. increment headings:mkcat readme.md | mklevel --=1 | mkout convert level 3 headings level 2:mkcat readme.md | mklevel -3=-1 | mkoutsource code | cli helpmktransformadd stream classes files a pipeline:mkcat readme.md | mktransform file.js transformer.js | mkoutsource code | cli helpmktoccreate standalone table contents:mkcat readme.md | mktoc -s | mkout > toc.mdinject table contents a document containing <!-- @toc --> marker:mkcat readme.md | mktoc | mkout > readme.mdsource code | cli helpmkhighhighlight code blocks ansi escape characters suitable printing a terminal:mkcat readme.md | mkhigh -o esc | mkoutgenerate standalone html page highlighted code blocks converted <pre> elements:mkcat readme.md | mkhigh | mkpage | mkhtml > readme.html program requires source-highlight is installed.source code | cli helpmkpagecreate html page:mkcat file.md | mkpage --title=title --style=style.css | mkout --htmlsource code | cli helpmkoutrender stream markdown, xml, html json.mkcat file.md | mkout --html are some specialized output programs certain types expose more options:mkman - render man pagemktext - render plain textmkhtml - render html pagesource code | cli helpmkparseparse comments tag annotations source files.mkparse index.js > index.doc.jslow-level parser working comments tag annotations, mkparse. command line interface provides means quickly inspect comments a document, extract comments a separate file strip comments a document.source code | cli helpmkapigenerate api documentation comments source files.mkapi index.js lib/*.js --title=api > api.mdsource code | cli helpapidocdoc(files[, opts])creates stream pipeline using mkcat the given source files.rather an array can pass file paths the form:doc('intro.md', 'install.md', {});returns output stream.files array source markdown files.opts object processing options.licensemitcreated mkdoc august 3, 2016"
}