{
	"_id": "14418341",
	"site": "https://github.com/chubin/cheat.sh",
	"title": "Cheat sheets as a service: curl cheat.sh",
	"author": "igor_chubin",
	"date": "2017-06-13T13:56:32.132Z",
	"tags": {
		"categories": [
			"opensource",
			"cheatsheet",
			"curl",
			"terminal",
			"command-line",
			"cli",
			"examples",
			"documentation",
			"help",
			"tldr"
		],
		"languages": [
			"python",
			"shell",
			"html",
			"css"
		]
	},
	"content": "readme.md unified read, search write access the popular cheat sheets repositories.featuressimple curl/browser interfaceavailable everywhere, installation neededselected popular maintained community driven cheat sheets repositoriessearch ( a cheat sheet in cheat sheets)tab completionsyntax highlightingeditors integrationusage read cheat sheet: curl cheat.sh/sudohere sudo is name the cheat sheet are looking .if don't the name the topic need, can search it using ~keyword notation. example, see you make snapshots, make following query ~snapshot get list snapshot creation examples commands.programming languages cheat sheets are located correspondent namespaces,named the name the language: scala/functionsread more the programming languages cheat sheets below. are several special pages ( name are always starting a colon), are cheat sheets have special meaning. example: :help :list list cheat sheets /perl/:list list perl cheat sheetscheat.sh supports tab completion a shell in browser. major shells are supported. read more it the tab completion section.cheat.sh uses syntax highlighting default. can switch off, choose color scheme it. url options that. more it the options section below.usage examples: $ curl cheat.sh/cpio $ curl cheat.sh/~snapshot $ curl cheat.sh//range $ curl cheat.sh/rust/hello $ curl cheat.sh/rust/hello?tsearch search a keyword, the query: /~keyword this case search is recursive is conducted in pages the specified level. example: /~snapshot for snapshot the level cheat sheets /scala/~currying for currying scala cheat sheets a recursive search all cheat sheets, double slash: /~snapshot/r for snapshot all cheat sheets can special search options the closing slash: /~shot/bi case insensitive (), word boundaries (b)list search options: case insensitive search b word boundaries r recursive searchspecial pagesspecial pages: :help page :list list cheat sheets :post to post cheat sheet :bash_completion bash function tab completion :bash bash function tab completion setup :fish fish function tab completion setup :zsh zsh function tab completion setup :emacs cheat.sh function emacs :emacs-ivy cheat.sh function emacs (uses ivy) :styles list color styles :styles-demo show color styles usage examplestab completiontab completion is very important part cheat.sh.having more a thousand cheat sheets, 's very hard learn their names. you to the cheat.sh shell functions, 's enough include :bash (:zsh :fish) ~/.bashrc: $ curl cheat.sh/:bash > ~/.bash.d/cheat.sh $ . ~/.bash.d/cheat.sh $ # add . ~/.bash.d/cheat.sh ~/.bashrc you to cheat.sh curl don't create special functions, include :bash_completion: $ curl cheat.sh/:bash_completion > ~/.bash.d/cheat.sh $ . ~/.bash.d/cheat.sh $ # add . ~/.bash.d/cheat.sh ~/.bashrceditors integrationemacscheat-sh.el emacs support (available at cheat.sh/:emacs)cheat.sh/:emacs-ivy emacs support ivy usersoptions?options q quiet mode, don't show github/twitter buttons t text , no ansi sequences ( be pasted an editor) style=style color styleoptions be combined together this : $ curl cheat.sh/?qt\\&style=bw(note \\ before &: is escaping &, has shell special meaning).programming languages cheat sheetscheat sheets related programming languagesare organized namespaces (subdirectories), are named according the programming languages. each supported programming language are several special cheat sheets: own sheet, hello, :list :learn. for lua will like: lua lua/hello lua/:list lua/:learn languages has one-liners-cheat sheet, 1line: perl/1linehello describes you start the language install if needed, build run programs, it shows \"hello world\" program written the language;:list shows topics related the language:learn shows learn-x--minutes language cheat sheet perfect getting started the language.1line is collection one-liners this languageweirdness is collection examples weird things this language the moment, cheat.sh covers 8 following programming languages (alphabetically sorted):prefixlanguagebasics-linersweirdness/gohaskell/haskelljs/javascriptlua/luaocaml/ocamlperl/perlphp/phppython/pythonrust/rustscala/scalacheat sheets sourcesinstead creating yet another mediocre cheat sheet repository, are concentrating efforts creation a unifiedmechanism access selected existing developed good maintainedcheat sheet repositories covering topics our interest:programming operating systems usage.cheat.sh uses several community driven repositories cheat sheets( the popularity column number contributors/number stars are shown):cheat sheetsrepositorypopularitycreation dateunix/linux, programmingcheat.sheets2/20may 1, 2017unix/linux commandstldr-pages/tldr336/9449dec 8, 2013unix/linux commandschrisallenlane/cheat93/3231jul 28, 2013programming languagesadambard/learnxinyminutes-docs999/4513jun 23, 2013a8m/-lang-cheat-sheet23/2086feb 9, 2014perlpkrumnis/perl1line.txt4/151nov 4, 2011pie diagram reflecting cheat sheets sources distribution ( number cheat sheets cheat.sh originating a repository): to conribute to edit cheat sheet you to edit cheat.sh cheat sheet, should edit in upstream repository. will find name the source repository a browser, you open cheat sheet. are github buttons the bottom the page: second is button the repository, whom belongs current cheat sheet. can edit cheat sheet directly your browser ( need github account it). is edit button the top right corner. you click it, editor be open. you change cheat sheet (under hood: upstrem repository is forked, changes arecommited the forked repository, pull request the upstream repository owner is sent). to add cheat sheet you to add cheat sheet, have of followingways:add to of external cheat sheets repositories; should decide your own is best repository your cheat sheet;add to local cheat.sh repository (cheat.sheets) github (fork, commit, pull request);post on cheat.sh using curl a web browser (cheat.sh/:post). you to change existing cheat sheet, have find original repository ( you open cheat sheet a browser, see repository's github button the bottom the cheat sheet), cheat sheet is coming , and change there. some the changes be synchronized cheat.sh. to add cheat sheet repository you to add cheat sheet repository cheat.sh, please open issue:add new repositoryplease specify name the repository, give short description."
}