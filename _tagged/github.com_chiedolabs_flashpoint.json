{
	"_id": "14436818",
	"site": "https://github.com/chiedolabs/flashpoint",
	"title": "Flashpoint: A Heroku review apps experience for multiple-repo apps",
	"author": "chiedo",
	"date": "2017-06-13T13:55:35.157Z",
	"tags": {
		"categories": [
			"opensource"
		],
		"languages": [
			"go"
		]
	},
	"content": "readme.md flashpointbeta notice: cli utility is still beta is rapidly changing. many changes are breaking changes require manual intervention. cli utility creating temporary heroku deployments a starter heroku app a git branch. experience is similar 'heroku review apps' focuses api-driven projects consist multiple git repositories.table contentsrequirementsinstallation upgradingpros consgetting startedusing tool config file formatdevelopmentgotchastodosrequirementsheroku cli version 5.8.1+wgetosx: brew install wgetubuntu: sudo apt- install wgetinstallation upgrading# following always updated the latest 'stable' version# via version number. can replace version number below any version# want install. you run , your current version be overwrittenwget -o /usr/local/bin/flashpoint https://github.com/chiedolabs/flashpoint/blob/0.0.6/flashpoint?raw=true \\&& chmod +x /usr/local/bin/flashpointpros cons flashpoint pros: apps aren't automatically deleted 5 days inactivity, can run clean command clean apps have been inactive five days more at own leisure.trivial start using. don't to change anything heroku do .you use flashpoint projects consist multiple git repos can automate environment variables based the newly created app names other apps your project.flashpoint cons: apps aren't automatically deleted 5 days inactivity. have run clean command occasions run a cronjob. collaborators the parent project an invitation collaborate each newly created \"review app\" you invite .apps aren't automatically created pull requests nor are automatically deleted. have manually push github your review app remote you changesgetting startedcreate directory your root folder named .flashpoint along a projects sub-directory.mkdir -p ~/.flashpoint/projectscreate project first step is you create template heroku apps each your apps inherit . you don't to the production heroku app the parent app (template). can create project creating ~/.flashpoint/projects/.json file (eg. ~/.flashpoint/projects/example.json) the content the example config a starting point.using tooldeploying project your current branch(s)flashpoint <project_file_name> createnote each you run (whether 've created flashpoint deployment the same branches already not), new group heroku apps are deployed ( just heroku app that's your project contains). updating, update existing deployment. a fleshed example (notice we're using file name not absolute path).flashpoint example.json createupdating exsisting projects update existing project run:git push -f <heroku_app_name> <localbranch>:master update command also given you creating project.cleaning old apps delete apps created this tool have been inactive over 5 days, can run script below.flashpoint clean to destroy apps created this tool runflashpoint clean --destroy_all you don't to worry running command manually, can schedule with cronjob entering crontab -e the terminal then adding following content then saving file.# will run every at noon. notice if computer is shut down sleeping the , the script not run until next at specified .0 12 * * * flashpoint cleanunderstanding json config file formatproject - name your project. can it whatever wantapps - each your apps included this project. will an array there be many.name - name the appparent_app_name - name the app heroku will used the template (leave the herokuapp.com portion)path - absolute system path this app's git repository your machine.scripts - array scripts run the heroku app you deploy . this is useful doing migrations, seeds, etc.using alternative heroku mysql databases you aren't using heroku default postgresql setup instead are using cleardb example, 'll need make your item under scripts the backend that database_url is set the correct value the app is created. 's hackish it works. 's sets database_url the newly created heroku app the cleardb_database_url contains newly created database's url. without , cleardb_database_url be correct the app database_url not .\"local\": \"heroku config:set --app $review_app_names[0] database_url=$(echo $(heroku config: --app $review_app_names[0] cleardb_database_url) | sed 's/mysql/mysql2/g')\",developmentinstall packages get ./... your changestest go run *.run build build binarygotchas app are created your personal heroku account. apps created this tool don't anything do heroku pipelines don't automatically deleted you close pull request. the parent app has addons, 'll need make sure have credit card file your personal account if won't any charges. are using heroku forking copy apps be sure read doc be aware the implications. is still to to push changes github, etc.-doscreate automation script creating projects.complete beta move version 1.0legal stufflicense"
}