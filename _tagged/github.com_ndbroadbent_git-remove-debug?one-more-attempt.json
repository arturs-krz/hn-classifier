{
	"_id": "14172152",
	"site": "https://github.com/ndbroadbent/git-remove-debug?one-more-attempt",
	"title": " A script to easily remove “puts”, “console.log”, etc. from your code",
	"author": "nathan_f77",
	"date": "2017-06-13T13:33:35.841Z",
	"tags": {
		"categories": [
			"opensource"
		],
		"languages": [
			"ruby"
		]
	},
	"content": "readme.md git-remove-debugsummary've fixed bug your code. only problem is you used bunch print statements debugger calls, now have clean those . you use git checkout -p work through the changes, you to careful, sometimes can't remove individual lines.git-remove-debug clean all your debugging statements a single command.full description usage is small script parses output git diff. default, deletes new changed lines are \"debugging statements\". can pass custom regex match lines. can pass -a flag ( --all) remove debugging statements all files are checked to git repository. script show every line it is to delete, will ask to confirm changes. can skip confirmation using -f ( --force) option. script has patch mode (-p --patch), similar git add -p git checkout -p. running patch mode, script prompt to confirm every individual line. can press q ctrl+c cancel any . you also press d skip rest the lines, only delete you already confirmed.note: unlike git add -p, don't to press return pressing 'y' 'n'.warning: patch mode, script not ask a final confirmation.examples$ git-remove-debug --helpusage: git-remove-debug [options] [files] -r, --regex=regex a custom regex changed lines -l, --lang=language the regex a given language -p, --patch asks to confirm deletion each matching line -, --all scans files are checked to git repository -f, --force does prompt before deleting lines -h, --help show message# deletes debugging statements new changed lines.# display of proposed changes, ask to confirm before deleting.$ git-remove-debug# scans files are checked to git repository.# can pass subdirectory, it recursively scan files that directory.# note: you call on large repo, 're going have good .$ git-remove-debug - # (or --)# delete debugging statements without confirming .$ git-remove-debug -f # ( --force)# looks new debugging statements the given files$ git-remove-debug <file> <other_file># enable patch mode. will ask to confirm every individual line.# can choose of following options:## y - yes, delete line# n - , dont delete line# d - , dont delete line, skip remaining lines.# q - quit don't delete anything.#$ git-remove-debug -p # ( --patch)# deletes new changed lines, where line matches given regex$ git-remove-debug -r \"^\\s*testing\" # ( --regex)# the built- regex a given language.# ( when want process files don't an extension)$ git-remove-debug -l ruby # ( --lang) is different eslint --fix, rubocop --auto-correct, etc.? looks new changed lines default.'s lot faster, since just uses git diff some simple regexes.has interactive mode, it's easy delete specific lines. can pass custom regex quickly delete matching lines.backs any changed files a temp directory, you quickly restore lost data.disclaimer backups software is provided without warranty any kind. using script, agree understand i not held personally responsible any data loss. protect against loss data, script make backup copy any file it touches. backup path be displayed the console.please note this script may work all encodings line endings. should be very careful your filenames contain spaces utf8 characters.recognized debugging statements default, script remove new changed lines. the - or -- flag scan files the git repo.99% my print statements are a single line. you a multi-line print statement, 'll to delete manually now. (pull requests are welcome!)javascriptextension: /\\.jsx?$/removes:console.logconsole.debugconsole.infoconsole.warnconsole.errordebuggerrubyextension: /\\.rb$/removes:putsprintdebuggerrequire 'byebug'require 'debugger'require 'pry'binding.prypythonextension: /\\.py$/removes:printimport pdbpdb.set_tracephpextension: /\\.php$/removes:var_dumpprint_rotherspull requests are welcome!default file languages script has built- support some common files don't an extension:ruby:gemfilerakefileguardfilejavascriptgruntfilefeel free add more send pr.requirementseither mac linux, a version ruby >= 2.0.0. script does use ruby gems.installation could clone repo somewhere set an alias:cd ~git clone https://github.com/ndbroadbent/git-remove-debug.gitalias grd=\"~/git-remove-debug/git-remove-debug\"# the alias permanent adding to ~/.bashrcecho \"alias grd=\\\"~/git-remove-debug/git-remove-debug\\\"\" >> ~/.bashrc"
}