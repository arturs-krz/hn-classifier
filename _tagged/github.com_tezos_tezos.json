{
	"_id": "14403232",
	"site": "https://github.com/tezos/tezos",
	"title": "Tezos/tezos: A self-amending cryptographic ledger",
	"author": "jashmenn",
	"date": "2017-06-13T13:56:41.583Z",
	"tags": {
		"categories": [
			"opensource"
		],
		"languages": [
			"ocaml",
			"makefile",
			"other"
		]
	},
	"content": "readme.md tezostezos is distributed consensus platform meta-consensus capability. tezos only comes consensus state, btc eth. also comes consensus how protocol the nodes should adapt upgrade. https://www.tezos.com/ more information the project.build instructions compile tezos, need ocaml compiler (version 4.04.0) all libraries listed src/tezos-deps.opam. best to install dependencies is first installingopam, ocaml package manager.create new switch alias tezos. switch is own version the opamconfiguration, including ocaml compiler, packages, package managerconfiguration related your project. is necessary that projectdoesn't conflict other ocaml projects other versions tezos.opam switch tezos --alias- 4.04.0activate new switch:eval `opam config env`install tezos dependencies: build-depscompile project:this should produce three binaries:tezos-node: tezos daemon itself;tezos-client: minimal command-line client;tezos-protocol-compiler: protocol compiler used developing version the economic protocol.currently tezos is being developed linux . it should on mac os, it has been tested recently. windows port is progress.note , when executing build-deps, opam detect required system dependencies are installed. however, is able detect versions actually . typically, willprobably fail you an libsodium < 1.0.11. this case, sure have recent version libsodium libsodium-dev, download install from, eg,https://pkgs.org/download/libsodium18 https://pkgs.org/download/libsodium-devrunning node a sandbox run single instance a tezos node sandbox mode:./tezos-node run --sandbox --rpc-addr localhost:8732 \"sandboxed\" node not participate the p2p network, will acceptrpc localhost port 8732. below more details the rpcinterface.running node far is official tezos network being run, you might run localtest network ( development team is running own testnet, you're interested joining network, please a request our slack channel. havelimited support abilities the moment we'll try help best can). the following command run node will accept incomingconnections:./tezos-node identity generate 24. will generate new node identity compute associated stamp proof--work. , the node listen connections coming on [::]:9732. used data is stored $home/.tezos-node/. example, default configuration file is $home/.tezos-node/config.json. run multiple nodes the same machine, can duplicate edit$home/.tezos-node/config.json while making sure don't share paths thedatabase any data file (cf. options db.store ; db.context ;db.protocol, net.peers-metadata net.identity). could let tezos generate config file specifying options thecommand line. instance, $dir/config.json does exist, followingcommand generate and replace default values the values the command line:./tezos-node run --data-dir \"$dir\" --net-addr localhost:9733 tezos server has built- mechanism discover peers the localnetwork (using udp packets broadcasted port 7732). this mechanism is sufficient, can provide tezos a list initial peers, either editing option net.bootstrap-peers theconfig.json file, by specifying command line parameter:./tezos-node run \\ --data-dir \"$dir\" --net-addr localhost:2023 \\ --peer localhost:2021 --peer localhost:2022 \"$dir\"/config.json exists, command line options override thoseread the config file. default, tezos won't modify content anexisting \"$dir\"/config.json file. , you may explicit ask node reset to update file according the command line parameters the following commands line:./tezos-node config reset --data-dir \"$dir\" --net-addr localhost:9733./tezos-node config update --data-dir \"$dir\" --net-addr localhost:9734configuration optionshere is example configuration file all parametersspecified. of time uses default values, except caseswhere default is explanatory enough (.e. \"bootstrap-peers\" is empty list default). comments are allowed json, thisconfiguration file not parse. are provided here help writing own configuration file needed.{ /* location the data dir disk. */ \"data-dir\": \"/home/tezos/my_data_dir\" /* configuration net parameters */ \"net\": { /* floating point number between 0 256 represents difficulty, 24 signifies example at least 24 leading zeroes are expected the hash. */ \"expected-proof--work\": 24.5, /* list hosts. tezos connect both ipv6 ipv4 hosts. the port is specified, default port 9732 be assumed. */ \"bootstrap-peers\": [\"::1:10732\", \"::ffff:192.168.1.3:9733\", \"mynode.tezos.com\"], /* specify the network is closed not. closed network allows peers listed \"bootstrap-peers\". */ \"closed\": false, /* network limits */ \"limits\": { /* delay granted a peer perform authentication, seconds. */ \"authentication-timeout\": 5, /* strict minimum number connections (triggers urgent maintenance). */ \"min-connections\": 50, /* targeted number connections reach bootstraping / maintaining. */ \"expected-connections\": 100, /* maximum number connections (exceeding peers are disconnected). */ \"max-connections\": 200, /* number above pending incoming connections are immediately rejected. */ \"backlog\": 20, /* maximum allowed number incoming connections are pending authentication. */ \"max-incoming-connections\": 20, /* max download upload speeds kib/s. */ \"max-download-speed\": 1024, \"max-upload-speed\": 1024, /* size the buffer passed read(2). */ \"read-buffer-size\": 16384, } }, /* configuration rpc parameters */ \"rpc\": { /* host listen . if port is specified, default port 8732 be assumed. */ \"listen-addr\": \"localhost:8733\", /* cross origin resource sharing parameters, https://en.wikipedia.org/wiki/cross-origin_resource_sharing. */ \"cors-origin\": [], \"cors-headers\": [], /* certificate key files (necessary tls is used). */ \"crt\": \"tezos-node.crt\", \"key\": \"tezos-node.key\" }, /* configuration log parameters */ \"log\": { /* output the logging function. either \"stdout\", \"stderr\" the name a log file . */ \"output\": \"tezos-node.log\", /* verbosity level: of 'fatal', 'error', 'warn', 'notice', 'info', 'debug'. */ \"level\": \"info\", /* fine-grained logging instructions. same format described `tezos-node run --help`, debug section. the example below, sections \"net\" all sections starting \"client\" have messages logged to debug level, whereas rest log sections be logged to notice level. */ \"rules\": \"client* -> debug, net -> debug, * -> notice\", /* format the log file, http://ocsigen.org/lwt/dev/api/lwt_log_core#2_logtemplates. */ \"template\": \"$(date) - $(section): $(message)\" }}debugging is possible set independant log levels different loggingsections tezos, well specifying output file logging. the description log parameters above well documentation under debug section diplayed `tezos-node run--help'.json/rpc interface tezos node provides json/rpc interface. note it is rpc, it isjson based, it does follow \"json-rpc\" protocol. is active default it must explicitely activated the --rpc-addr option.typically, you are trying run local network just toexplore rpc, would run:./tezos-node run --sandbox --rpc-addr localhost rpc interface is self-documented the tezos-client executable is able pretty-print rpc api. instance, see api provided the tezosshell:./tezos-client rpc list get api attached the \"genesis\" block, including remote proceduresprovided the associated economic protocol version:./tezos-client rpc list /blocks/genesis/ might want json schema describing expected input output a rpc. instance:./tezos-client rpc schema /blocks/genesis/hashnote: can the same information, as raw json object, a simplehttp request:wget --post-data '{ \"recursive\": true }' -o - http://localhost:8732/describewget --post-data '{ \"recursive\": true }' -o - http://localhost:8732/describe/blocks/genesiswget -o - http://localhost:8732/describe/blocks/genesis/hash minimal cli client in progress. ./tezos-client -help available commands."
}