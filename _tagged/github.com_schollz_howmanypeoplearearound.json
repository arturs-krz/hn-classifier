{
	"_id": "14332479",
	"site": "https://github.com/schollz/howmanypeoplearearound",
	"title": " Howmanypeoplearearound – Use wifi to calculate number of people around",
	"author": "qrv3w",
	"date": "2017-06-13T13:08:16.866Z",
	"tags": {
		"categories": [
			"opensource",
			"tshark",
			"wifi",
			"location",
			"sensor"
		],
		"languages": [
			"python"
		]
	},
	"content": "readme.md howmanypeoplearearoundcount number people around by monitoring wifi signals .howmanypeoplearearound calculates number people the vicinityusing approximate number smartphones a proxy (since ~70% people smartphones nowadays). cellphone is determined be proximity the computer based sniffing wifi proberequests. possible uses howmanypeoplearearound include: monitoring foot traffic your house raspberry pis, seeing your roommates are home, etc.tested linux (raspbian ubuntu) mac os x. may illegal monitor networks mac addresses, especially networks you not own. please check country's laws ( us section 18 u.s. code § 2511) - discussion.getting starteddocker alternative docker is installed locally you to howmanypeoplearearound for quick spin, can try following:copy dockerfile this repo your current working directorydocker build -t howmanypeoplearearound . # . at end is importantdocker run - --net=host --name howmanypeoplearearound howmanypeoplearearoundnote: docker alternative is known work ubuntu not mac os x. feedback other platforms be appreciated.dependenciespython 2.7 preferably python 3 must installed your machine the pip command available. python -v pip -vwifi adapter supports monitor mode are number possible usb wifi adapters support monitor mode.personally prefer tn722n is ~$10 works great every model the raspberry pi. here is good list adapters support 'ad-hoc' mode theraspberry pi.mac os x brew install wireshark brew cask install wireshark-chmodbpflinux tsharksudo apt- install tshark update so can run non-root:sudo dpkg-reconfigure wireshark-common (select yes)sudo usermod - -g wireshark ${user:-root}newgrp wiresharkinstallpip install howmanypeoplearearoundrunquickstart run, simply type $ howmanypeoplearearoundusing wlan1 adapter scanning 60 seconds...[==================================================] 100% 0s left are 3 around. will prompted the wifi adapter use scanning. sure use adapter supports \"monitor\" mode.options can modify scan , designate adapter, modify output using command-line options.$ howmanypeoplearearound --helpoptions: -, --adapter text adapter use -z, --analyze text analyze file -s, --scantime text in seconds scan -o, -- text output cellphone data file -v, --verbose verbose mode --number print number -j, --jsonprint print json cellphone data -n, --nearby quantify signals are nearby (rssi > -70) --nocorrection not apply correction --loop loop forever --sort sort cellphone data distance (rssi)print json can generate json-formatted output see kind phones are around:$ howmanypeoplearearound -o test.json - wlan1[==================================================] 100% 0s left are 4 around.$ cat test.json | python3 -m json.tool[ { \"rssi\": -86.0, \"mac\": \"90:e7:c4:xx:xx:xx\", \"company\": \"htc corporation\" }, { \"rssi\": -84.0, \"mac\": \"80:e6:50:xx:xx:xx\", \"company\": \"apple, inc.\" }, { \"rssi\": -49.0, \"mac\": \"ac:37:43:xx:xx:xx\", \"company\": \"htc corporation\" }] higher rssi means closer ( of phones is mine, the two are roommates' were upstairs).run forever can add --loop make run forever append lines output file, test.json:$ howmanypeoplearearound -o test.json - wlan1 --loopvisualize can visualize output a looped command via browser using:$ howmanypeoplearearound --analyze test.json wrote index.htmlopen browser http://localhost:8001type ctl+c exit just open index.html a browser you should plots. first plot shows number people time. here can that start arriving work place around 8-9am ( work starts!). second plot shows rssi values the mac addresses seen. can double-click one them particular highlight trajectory, i done here my phone ( can when leave and i arrive work!): does work?howmanypeoplearearound counts the number probe requests coming cellphones a given amount time. probe requests be \"sniffed\" a monitor-mode enabled wifi adapter using tshark. acccurate count doesdepend everyone having cellphone also scanning long enough (1 - 10 minutes) capture packet a phone pings wifi network ( happens every 1 10 minutes unless phone is off wifi is disabled). is simplification another program wrote, find-lf uses similar idea a cluster raspberry pis geolocate positions cellphones within vicinity.licensemit"
}