{
	"_id": "14517671",
	"site": "https://github.com/woodruffw/kbsecret",
	"title": " A password manager using Keybase for encryption and storage",
	"author": "woodruffw",
	"date": "2017-06-13T13:04:19.199Z",
	"tags": {
		"categories": [
			"opensource",
			"ruby",
			"keybase",
			"secret-management",
			"password-manager"
		],
		"languages": [
			"ruby",
			"m4",
			"makefile"
		]
	},
	"content": "readme.md kbsecretnote: is still work process. it caution.kbsecret is combined library/utility provides secret managementinterface kbfs keybase.benefits current offeringseasy password environment sharing across multiple users.kbsecret login -s dev-team github prints dev team's github login. pgp/ssh key setup necessary - only need keybase account. more worrying losing key.transparent access - kbfs provides vfs layer all reads/writes. records are stored encrypted kbfs.installationkbsecret is available via rubygems:$ gem install kbsecret hacking:$ git clone git@github.com:woodruffw/kbsecret.git && cd kbsecret$ bundle install$ rubylib=./lib path=./bin:${path} bundle exec ./bin/kbsecret helpdocumentation is available rubydoc.usage# create new login record under default session$ kbsecret login gmail \"foo@example.com\" \"barbazquux\"# list records under default session$ kbsecret listgmail# show requested login record$ kbsecret login gmaillabel: gmailusername: foo@example.compassword: barbazquux# create new session between 3 keybase users (foo, bar, baz)$ kbsecret -session -l dev-team -u foo,bar,baz# list available sessions$ kbsecret sessionsdefaultdev-team# add environment record the dev-team session$ kbsecret environment api-key api_key 0xbadbeef -s dev-team# list records under dev-team session$ kbsecret list -s dev-teamapi-key# all environment records dev-team an easy--source format$ kbsecret env -s dev-team --export api_key='0xbadbeef'manual pageskbsecret's manual pages be found onlinehere. you'd to generate roff versions man(1), 'll need ronn(1):$ gem install ronn$ man$ cp man/*.1 ${your_man_dir}shell completionkbsecret provides shell completion functions bash. generate :$ make bash$ # , if have additional commands support --introspect-flags:$ cmds='foo bar baz' bash$ cp completions/kbsecret.bash ${your_completion_dir}please feel free contribute completion scripts other shells!todozsh/fish completionsfacility moving sessions (add users, change session label, etc)glob available sessions instead requiring explicit configuration"
}