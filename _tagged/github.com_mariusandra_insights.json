{
	"_id": "14361791",
	"site": "https://github.com/mariusandra/insights",
	"title": "Self-Hosted “SQL-Not-required” Data Analytics and BI Tool. Inspired by Looker",
	"author": "mariusandra",
	"date": "2017-06-13T13:57:47.325Z",
	"tags": {
		"categories": [
			"opensource",
			"business-intelligence",
			"visualization",
			"data-analytics",
			"ruby-on-rails",
			"kea",
			"react"
		],
		"languages": [
			"javascript",
			"ruby",
			"css",
			"other"
		]
	},
	"content": "readme.md insights our education marketplace grew, faced dilemma: had little visibility our data.questions such \"who is best customer?\", \" target countries are gaining sales?\" \"what are most popular categories paid leads?\" required tinkering the rails console writing custom stats pages. lost lot developer over years. we started looking the best business intelligence solution there.unfortunately, all had problems. required knowledge sql. made multi-table data exploration pain. cost arm, leg an iphone. per month. best tool found was looker, at monthly price equal our burn rate, wouldn't .so decided re-implement essential parts looker an open source alternative.insights is self-hosted \"sql--required\" data analytics business intelligence tool. featuring linkable urls, easy data exploration, automatic joins, graphs, exports, facets (pivots), saveable views, pretty colors a ridiculously permissive license (mit).'s work progress you're brave checking out! cheers!play the demo here. does worksimilar looker their lookml, insights requires to define data model a file called insights.yml. use insights_export gem generate file your rails models. (adapters other frameworks coming soon.) keep file your code update whenever something changes. edit to add custom fields (e.g. full_name: first_name || ' ' || last_name), hide existing fields (e.g. encrypted_password) hide entire models. your database changes, run rake insights:export the file is updated automatically. entry this file looks this:order: enabled: true # set false hide model: order table_name: orders primary_key: id columns: id: type: :number index: :primary_key total_price: type: :number hidden_field: false # stays hidden currency: type: :string # ... custom: total_price_in_eur: sql: \"$$.total_price * $$.currency_to_eur\" type: :number links: order_lines: model: orderline model_key: order_id my_key: id user: model: user model_key: id my_key: user_id give insights.yml file a database connection insights start exploring. point is : your developers update .yml file. ceo cfo browse interface. they ask a report, send a link the right view they explore further. to play the demo here try answer following questions: product has been bought most? (solution)sales country month (solution) - export as pdf well!sales delivery status (solution)where are users (solution)... month? (solution)... ones confirmed orders? (solution)hint: count rows, select id field then count the table header.coming soondashboardsbetter graph controlsgraphs don't require time columnview generated sqlmoderate react/kea frontend code refactoringpolishinginstallinginstalling insights is two-part process:1. export app's structure you need create insights.yml file your main rails application. file describe database structure,including custom fields aliases you may define.1.1. generate insights.yml file your rails appadd gem 'insights_export' your gemfile run:rake insights:export generated config/insights.yml file needs be accessible insights the next steps. recommend keeping in app's repository running rake insights:export each your database structure changes update . you then symlink to insights.2. install insights2.1. git clone ( fork clone) repositorygit clone https://github.com/mariusandra/insightscd insights2.2. install ruby (2.3+) nodejs (6+) packagesassuming bundler yarn are installed:bundleyarn sure above commands succeed!2.3. setup local databaseinsights needs database its internal .copy config/database.yml.example config/database.ymlfeel free keep default sqlite configuration change for something beefier. initialize :bundle exec rake db:createbundle exec rake db:schema:load2.4. configure connection app connection your app lives config/initializers/insights.rb.copy from config/initializers/insights.rb.example edit accordingly.2.4.1. set the path insights.ymlinsights_export_path = \"#{rails.root}/insights.yml\"insights_export_path = '../-app/config/insights.yml'insights_export_path = '/srv/-app/current/config/insights.yml'2.4.2. set the database connectioninsights_database = { adapter: 'postgresql', encoding: 'unicode', host: 'localhost', database: 'insights_demo', pool: 5, variables: { # 's strongly recommended have timeout here! statement_timeout: 5000 }}2.4.3. set the credentialsuncomment of following either your app open everyone protected a login screen.insights_login = false # login screeninsights_login = ['demo', 'demo']insights_login = [['demo', 'demo'], ['admin', 'pass']]insights_login = -> (user, pass) { user == 'demo' && pass == 'password' }insights_login = -> (user, pass) { connect_to_your_app_and_check_the_credentials(user, password) }'s example authenticating against devise backed users table insights.rb.example2.5. run !bundle exec foreman start open http://localhost:3300miscupdatingrun commands updategit pullbundleyarnbundle exec rake db:migratecompile assets production./script/build/reactrails_env=production bundle exec rake assets:precompile"
}