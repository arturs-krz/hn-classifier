{
	"_id": "14362890",
	"site": "https://github.com/nluedtke/linux_kernel_cves",
	"title": "A project to track CVEs in the upstream linux kernel",
	"author": "ivank",
	"date": "2017-06-13T13:57:47.118Z",
	"tags": {
		"categories": [
			"opensource",
			"cve",
			"linux-kernel",
			"tracking-cves",
			"security-vulnerability",
			"tracker",
			"security-audit",
			"linux",
			"linux-security"
		],
		"languages": []
	},
	"content": "readme.md linux_kernel_cves is simple project track cves the upstream linux kernel.individual distro's (rhel, debian, ubuntu, etc) often a job tracking cves their own kernels this information is lacking the upstream kernel. project aims help with void.currently output this is stored the cves.txt file. outputwas generated automatically through set tools has beenfully tested made public yet. are separate files each ltsstream. files list cves possibly affect stream when/ they were fixed.linux security notetracking, mitigating, patching cves is a small part maintaining secure kernel. let be clear, can patch knowncves still vulnerable. risk be mitigated throughproperly configuring kernel/system. suggest visit kernel self protection project other kernel security pages moreinformation.reading stream reportsbelow is list definitions certain strings might in stream report. only cves should appear the streamdocument are ones potentially affect stream. (ie. ones were fixed prior the release version were introduced the release version) no fixing commit is known a cve, by default is assumed present all streams it was introduced.'fix unknown': fixing commit the commit maps the commit isinvalid'fixed x': fixing commit was seen the stream firstappears version x'fix seen stream': fixing commit is known valid, not seen this stream (ie. stream is still vulnerable)overview process process generating documents is focused being automated possible. below is general outline steps. list all kernel cves (currently limited after 2004, #3). the issue is marked vendor specific, ignore .get breaking/fixing commits. is retrieved theinternal cache , if present pulls ubuntu, debian,etc try fill information .using those commit ids, the tags the mainline they appear.using version timeline, each stream would vulnerable perform steps 6 through 8.find commit has commit message matches commitmessage the mainline. is fixing commit that stream.record commit id get earliest tag the stream has commit.output information stream document.update jsons.accuracy is currently autogenerated will through testing before promises accuracy are made. eventual goal be have community curated list cves along when code was introduced when was fixed.development to contribute? great! due the vary early stages this thebest places is through github issues start discussions requests.updating commit maps the breaks/fixes information is veryhelpful. file merge request it accepted the informationis validated. /when idea matures, direct contributions ofcourse accepted.known issuesbreaks/fixes lists accuracy 100% ( is slowly being corrected)multiple commits fix cve handled a commit fixes previous incomplete fix version timelinemay be correct (update: progress)haven't verified all cves are the list yet ( the works)"
}