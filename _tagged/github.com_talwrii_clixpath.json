{
	"_id": "14432834",
	"site": "https://github.com/talwrii/clixpath",
	"title": " Clixpath â€“ easily extract data from html/xml using xpath using shell",
	"author": "attrigh",
	"date": "2017-06-13T13:06:18.520Z",
	"tags": {
		"categories": [
			"opensource"
		],
		"languages": [
			"python",
			"shell"
		]
	},
	"content": "readme.md clixpath command-line tool extract values xpath expressions html xml documents. distinguishing features are intended ease use, producing output can parsed programmatically.supports value extraction analogous capture groups regexp.tested python 2.7 python 3.5.installingpip install git+https://github.com/talwrii/clixpath#egg=clixpathexamples / cheat sheet#basic usage$ curl -l --silent http://xkcd.com/1833 | clixpath '//img/@src'/s/0b7742.png//imgs.xkcd.com/comics/code_quality_3.png//imgs.xkcd.com/s/a899e84.jpg#machine readable output ( main reason this tool)$ curl -l --silent http://xkcd.com/1833 | clixpath --json '//img'{\"file\": \"stdio\", \"markup\": \"<img src=\\\"/s/0b7742.png\\\" alt=\\\"xkcd.com logo\\\" height=\\\"83\\\" width=\\\"185\\\"/>\", \"path\": \"/html/body/div[@id=\\\"topcontainer\\\"]/div[@id=\\\"topright\\\"]/div[@id=\\\"masthead\\\"]/span//img\"}{\"file\": \"stdio\", \"markup\": \"<img src=\\\"//imgs.xkcd.com/comics/code_quality_3.png\\\" title=\\\"'s a half-solved cryptogram where solution is piece forth code written someone doesn't forth.\\\" alt=\\\"code quality 3\\\" srcset=\\\"//imgs.xkcd.com/comics/code_quality_3_2x.png 2x\\\"/>\", \"path\": \"/html/body/div[@class=\\\"box\\\" @id=\\\"middlecontainer\\\"]/div[@id=\\\"comic\\\"]/img\"}{\"file\": \"stdio\", \"markup\": \"<img src=\\\"//imgs.xkcd.com/s/a899e84.jpg\\\" width=\\\"520\\\" height=\\\"100\\\" alt=\\\"selected comics\\\" usemap=\\\"#comicmap\\\"/>\", \"path\": \"/html/body/div[@class=\\\"box\\\" @id=\\\"bottom\\\"]/img\"}#extracting structured data records ( capture groups regexp)$ curl -l --silent http://xkcd.com/1833 | clixpath '//img' --extract alt_text @alt --extract source @src<img src=\"/s/0b7742.png\" alt=\"xkcd.com logo\" height=\"83\" width=\"185\"/>alt_text:xkcd.com logosource:/s/0b7742.png<img src=\"//imgs.xkcd.com/comics/code_quality_3.png\" title=\"'s a half-solved cryptogram where solution is piece forth code written someone doesn't forth.\" alt=\"code quality 3\" srcset=\"//imgs.xkcd.com/comics/code_quality_3_2x.png 2x\"/>alt_text:code quality 3source://imgs.xkcd.com/comics/code_quality_3.png<img src=\"//imgs.xkcd.com/s/a899e84.jpg\" width=\"520\" height=\"100\" alt=\"selected comics\" usemap=\"#comicmap\"/>alt_text:selected comicssource://imgs.xkcd.com/s/a899e84.jpgusageusage: clixpath [-h] [--json] [--drop drop] [--extract key value] [---key no_key] xpath [file [file ...]]extract data an html/xml file using xpathpositional arguments: xpath xpath expression file file operate . (path included json)optional arguments: -h, --help show help message exit --json, -j produce output machine readable json --drop drop, -d drop delete xpaths result --extract key value, -x key value takes args key xpath extact xpath matches stores in key ---key no_key, -n no_key not include item output. (e.g. markup)alternatives considered before writingxmlstarlet always forget this works, i couldn't it html 5 minutes xmllint easy use, i not the output easily parseablexidel considered, i doubted would produce machine readable output, it was pascalpq did produce machine readable outputhtmlpath did produce machine readable output, project seemed too small justify taking the authors pushing changescli-scrape didn't run i used , gave after 5 minutes (sorry the fud)xslt useful more general tasks, boilerplate plus learning curvelxml python mostly same xslt a slightly more shallow learning curve the price requiring turing completeness.converting xml / html json can use json tools jq. , for example, xml2json. found approach problematic using xml namespaces.xpath 2.0 xquery support transformation data could used this sort task, albeit some boiler plate. cursory inspection open source tools failed find tools i describe \"do i mean convenient command line tools\". though reader might to aware xqilla galaxtesting you write tests the tests directory, i trust code more. you run tox it work i run before merging code...caveats tool is the category convenience utilities rather a general-purpose tool. makes common tasks easy general tasks impossible. may accept patch the grounds something being too complicated this tool. most likely place this come is support building recursive json records using --extract option. such cases, more powerful tool xslt lxml should used. not expect code depends parsing non-json output not broken."
}