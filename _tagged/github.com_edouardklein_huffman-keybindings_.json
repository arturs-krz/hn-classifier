{
	"_id": "14290994",
	"site": "https://github.com/edouardklein/huffman-keybindings/",
	"title": " Huffman Keybindings",
	"author": "linschn",
	"date": "2017-06-13T13:31:14.523Z",
	"tags": {
		"categories": [
			"opensource"
		],
		"languages": [
			"clojure"
		]
	},
	"content": "readme.md huffman-keybindingsabstracthuffman-keybindings is clojure[script] library typically intended use a ui setting order associate shorter keybindings the often used components. uses 26-ary huffman tree map each ui component ( \"tag\") a sequence lower case alphabetic characters. optimality the encoding the fact no encoding is prefix another huffman coding right tool this job.example usage; input should a map the name the component ( \"tag\") ; a number proportional the component's usage frequency, its priority, etc.; components a higher number be given shorter keybinding(def random-words [\"destroy\" \"suspect\" \"last\" \"manage\" \"head\" \"own\" \"fit\" \"charge\" \"disappear\" \"strip\" \"stare\" \"double\" \"guide\" \"drip\" \"bump\" \"multiply\" \"sigh\" \"boast\" \"warm\" \"rule\" \"trade\" \"dream\" \"list\" \"frighten\" \"marry\" \"rescue\" \"rock\" \"replace\" \"curl\" \"clean\" \"offer\" \"try\" \"poke\" \"moor\" \"strap\" \"dry\" \"match\" \"hum\" \"interrupt\" \"roll\" \"excite\" \"battle\" \"suspend\" \"empty\" \"attend\" \"warn\" \"precede\" \"wail\" \"mate\" \"receive\" \"smash\" \"regret\" \"meddle\" \"blink\" \"trust\" \"mark\" \"answer\" \"approve\" \"identify\" \"pray\"])(def tagcounts (apply merge {} ( [x random-word] [x (rand-int 10)]))); answer is returned a map tag keybinding(bindings test-tagcounts); returns : ; {\"drip\" \"r\", \"poke\" \"p\", \"curl\" \"c\", \"fit\" \"f\", \"rule\" \"d j\", \"list\" \"q\", \"wail\" \"w w\", \"warm\" \"\", \"smash\" \"d b\", \"rock\" \"o\", \"boast\" \"w b\", \"multiply\" \"d l\", \"offer\" \"e\", \"dry\" \"x\", \"moor\" \"b\", \"try\" \"d t\", \"precede\" \"k\", \"suspend\" \"d u\", \"warn\" \"h\", \"guide\" \"d k\", \"disappear\" \"d d\", \"suspect\" \"d q\", \"charge\" \"\", \"frighten\" \"w f\", \"regret\" \"d e\", \"pray\" \"y\", \"battle\" \"d c\", \"stare\" \"w s\", \"meddle\" \"m\", \"replace\" \"d p\", \"attend\" \"d \", \"destroy\" \"d y\", \"identify\" \"d n\", \"trust\" \"l\", \"own\" \"n\", \"strap\" \"z\", \"empty\" \"w e\", \"sigh\" \"s\", \"mate\" \"d f\", \"head\" \"d g\", \"strip\" \"d s\", \"last\" \"d v\", \"interrupt\" \"d \", \"dream\" \"d w\", \"marry\" \"w m\", \"match\" \"t\", \"double\" \"u\", \"manage\" \"d m\", \"blink\" \"w l\", \"roll\" \"d o\", \"bump\" \"d x\", \"clean\" \"w c\", \"trade\" \"j\", \"mark\" \"d r\", \"rescue\" \"w r\", \"answer\" \"g\", \"approve\" \"v\", \"receive\" \"d z\", \"excite\" \"w x\", \"hum\" \"d h\"}; is easier read pretty printed:(println (pretty-print (huffman tagcounts))); prints:; 253...; |_z:5:strap; |_q:5:list; |_x:5:dry; |_v:6:approve; |_k:6:precede; |_y:6:pray; |_l:6:trust; |_p:7:poke; |_j:7:trade; |_i:7:charge; |_h:7:warn; |_n:8:own; |_s:8:sigh; |_t:8:match; |_b:8:moor; |_g:8:answer; |_u:8:double; |_f:9:fit; |_e:9:offer; |_a:9:warm; |_r:9:drip; |_m:9:meddle; |_o:9:rock; |_c:9:curl; |_d:33...; |_z:0:receive; |_w:0:dream; |_q:0:suspect; |_j:0:rule; |_x:0:bump; |_v:0:last; |_k:0:guide; |_y:0:destroy; |_n:1:identify; |_f:1:mate; |_p:1:replace; |_b:1:smash; |_g:1:head; |_l:1:multiply; |_o:1:roll; |_c:1:battle; |_d:2:disappear; |_e:2:regret; |_i:2:interrupt; |_u:2:suspend; |_h:2:hum; |_s:3:strip; |_a:3:attend; |_t:3:try; |_r:3:mark; |_m:3:manage;|_w:42...; |_w:3:wail; |_s:4:stare; |_f:4:frighten; |_b:4:boast; |_l:4:blink; |_m:4:marry; |_c:4:clean; |_e:5:empty; |_x:5:excite; |_r:5:rescue most used components first dibs their keybinding. our example, widely used \"curl\", \"meddle\" \"fit\" are mapped \"c\", \"m\" \"f\", respectively.\"rock\" is mapped \"o\", second letter however, \"r\" is taken \"drip\". \"drip\" not \"d\" \"d\" is prefix 26 components, e.g. \"d d\" get \"disappear\" \"d h\" get \"hum\".linkswikipedia's article huffman coding is great primer. idea using huffman's algorithm devise keybindings pops from to , for example this hn comment thread in wow forums thread. you are aware any actual implementation, please tell , and 'll add reference here.contributing license code is hosted github under agplv3 license:https://github.com/edouardklein/huffman-keybindings"
}