{
	"_id": "14451622",
	"site": "https://github.com/alexjoverm/typescript-library-starter",
	"title": "TypeScript Library starter",
	"author": "alexjoverm",
	"date": "2017-06-13T13:55:21.560Z",
	"tags": {
		"categories": [
			"opensource",
			"typescript",
			"tslint",
			"webpack",
			"typedoc",
			"jest",
			"coveralls",
			"travis",
			"library"
		],
		"languages": [
			"typescript",
			"javascript"
		]
	},
	"content": "readme.md typescript library starter starter project makes creating typescript library extremely easy.usagegit clone https://github.com/alexjoverm/typescript-library-starter.git yourfoldernamecd yourfoldername# run npm install write library name asked. 's !npm installstart coding! package.json entry files are already set for , so don't worry linking your main file, typings, etc. keep those files the same names.featureszero-setup. running npm install things be setup you rollupjs multiple optimized bundles following standard convention tree-shaking.tests, coverage interactive watch mode using jestprettier tslint code formatting consistency.docs automatic generation deployment gh-pages, using typedocautomatic types (*.d.ts) file generationtravis integration coveralls report(optional) automatic releases changelog, using semantic release, commitizen, conventional changelog husky ( the git hooks)excluding peerdependencies library development, might to set peer dependencies, thus remove those the final bundle. can in rollup docs to that. good news is here is setup you, only must include dependency name external property within rollup.config.js. example, you wanna exclude lodash, write external: ['lodash'].npm scriptsnpm t: run test suitenpm start: runs npm run build watch modenpm run test:watch: run test suite interactive watch modenpm run test:prod: run linting generate coveragenpm run build: generage bundles typings, create docsnpm run lint: lints codenpm run commit: commit using conventional commit style (husky tell to it you haven't )automatic releases you'd to automatic releases semantic versioning, follow simple steps.prerequisites: need create/login accounts add project :npmtraviscoverallsrun following command prepare hooks stuff:npm run semantic-release-preparefollow console instructions install semantic release run (answer to \"generate travis.yml\").note: sure 've setup repository.url your package.json filenpm install -g semantic-release-clisemantic-release setup# important!! answer to \"generate travis.yml\" question. is already prepared you :p now , you'll need use npm run commit, is convenient to create conventional commits.automatic releases are possible thanks semantic release, publishes code automatically github npm, plus generates automatically changelog. setup is highly influenced kent c. dodds course egghead.iogit hooks is already set precommit hook formatting code prettier default, are 2 disabled git hooks. 're set when run npm run semantic-release-prepare script. make sure: follow conventional commit message build is gonna fail travis ( your ci server), since 's runned locally before git push makes more sense combination automatic releasesfaqarray.prototype., promise, map... is undefined?typescript babel provides down-emits syntactical features (class, let, async/away...), not functional features (array.prototype.find, set, promise...), . that, need polyfills, such core-js babel-polyfill ( extends core-js). a library, core-js plays very nicely, since can import the polyfills need:import \"core-js/fn/array/find\"import \"core-js/fn/string/includes\"import \"core-js/fn/promise\"... is npm install doing first runned? runs script tools/init sets everything you. short, :configures rollupjs the build, creates bundles.configures package.json (typings file, main file, etc)renames main src test files if don't git-hooks, automatic releases semantic-release? you may to:remove commitmsg, postinstall scripts package.json. will use those git hooks make sure make conventional commitremove npm run semantic-release .travis.yml if don't to coveralls report coverage?remove npm run report-coverage .travis.ymlcreditsmade by @alexjoverm all wonderful contributors (emoji key):ciro marius schulzalexander odellryan hamchi matt mazzola sergii lischuksteve lee project follows all-contributors specification. contributions any kind welcome!"
}