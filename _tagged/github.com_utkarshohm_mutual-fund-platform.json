{
	"_id": "14332589",
	"site": "https://github.com/utkarshohm/mutual-fund-platform",
	"title": " Library to make mutual fund investment platform on top of BSE",
	"author": "utkarshohm",
	"date": "2017-06-13T13:08:17.810Z",
	"tags": {
		"categories": [
			"opensource",
			"python",
			"mutual-funds",
			"fintech",
			"bse",
			"india"
		],
		"languages": [
			"python"
		]
	},
	"content": "readme.md mf-platform-bsepython library programmaticaly purcahse/redeem mutual funds india using bombay stock exchange starmf platform's api web portalcontextreal-life application library built operated mutual fund investing platform an amfi licensed mutual fund distributor a . i used library programmatically and track rs 50 lacs investment several investors. was built a week sep 2016 works of may 2017. since investing website was built django, will some parts that the code though django is optional requirement. can build platform without with other framework your choice.open source fintech?! finance industry believes differentiation fintech come building execution/transaction platform. believe the contrary execution soon commoditized differentiation come better products, ease their and large-scale distribution. is why am open-sourcing mutual fund execution platform. bse star mfbombay stock exchange runs mf execution platform called starmf. distributors me plug it place transactions any mutual fund without setting a payment gateway, settlement system signing agreements directly mf companies. bsestarmf offers soap api placing transactions. used latest api guide building library. web portal has comprehensive capabilities including those the api doesn't offer tracking status transactions. each transaction depends multiple stakeholders - rta (tech provider mf company), kra (user kyc verified?), bank (payment received?) bse ( necessary data user received?), hence tracking status is critical building mutual fund investing platform.codecritical codemeat the library is 2 files:api.py has functions necessary transact mutual funds using soap apicreate_user_bse() registers user bsestarmf corresponding your user kyc bank details. pre-requisite all api endpointscreate_mandate_bse() registers mandate (instruction given debit bank account periodically a specific amount) a user. pre-requisite creating sip transaction.create_transaction_bse() creates purchase/redeem -time/sip transactioncancel_transaction_bse() cancels transactionget_payment_link_bse() gets link can used user pay his/ investmentsget_payment_status_bse() gets whether payment a transaction was approved the user's bank notweb.py crawls web portal update transaction statusupdate_transaction_status() updates status all transactions need status update (.e. completed failed). importantly includes sip transactions have instalment order due today. once sip transaction was succesfully processed, bsestarmf keeps auto-trigerring each instalment the right date this status updater keeps tracking auto-trigerred instalment orders.supporting codemodels3 key data structures are necessary a mutual fund transaction platform. regulations require carefully archive data 5 years.funds.py stores mutual fund schemes' official sid details, ratings, returns, owner, rta, managers, benchmark indices, portfolio history.graphs.py stores series data funds indices ( bse sensex, sbi fixed deposit rate), daily frequency.users.py stores kyc, bank, fatca mandate details each investor.transactions.py stores each purcahse/redeem transaction's key details incl status, datetime stamps, payment details, corresponding api queries made bsestarmf corresponding responses received. can find more detailed models a separate repo discussion choice database these models. note several models this repo are directly used placing transactions through bse are required a mutual fund platform.requirementsnecessarymarket_dates.csv stores the dates which bse was open financial transactionszeep used a python soap clientselenium used automate browsing web portalpyvirtualdisplay used create virtual display necessary a headless browseroptionaldjango, mysql mongo - models management commands. note you don't need . i kept parts django i used originally my website. feel free remove or replace withchromedriver used selenium browsing using chrome browser. executable must downloaded separately. to the api web crawler? 2 files show to api.py web.py your code. have used django management commands easy demonstration, treat as simple python filestransact_using_api.py shows to the api functions transactupdate_transaction_status.py shows to api functions web crawling periodically update status transactions. should run using cron job every that market is open, 10:05 am ( market opens), 3:05 pm ( market closes mf transactions) 6:05 pm ( transactions been processed).related reposhistorical nav/price/-series data mutual funds popular benchmark indices indiamodels (data structures) required make mutual fund investment platformneed help setting up want contribute?feel free raise issue i get asap"
}