{
	"_id": "14435156",
	"site": "https://github.com/jeff3dx/react-query-params",
	"title": "A Query Params Module for React",
	"author": "jeff3dx",
	"date": "2017-06-13T13:55:34.174Z",
	"tags": {
		"categories": [
			"opensource"
		],
		"languages": []
	},
	"content": "readme.md react query paramseasy use query param support react.plays super nice react:semantically similar setstate()/set arrays objectsclean url's default valuesopt to browser historyoptionally read next query params componentwillreceiveprops()installationinstall npm:npm install react-query-paramssetup be seamless possible reactqueryparams is used a base class were would normally component. inherits component you're losing anything.ex. app.jsx:import reactqueryparams 'react-query-params';export default class myapp extends reactqueryparams { /* code */}usageconst value = .queryparams.lunch;setsemantically similar react setstate():.setqueryparams({game: 'chess',algorithm: 'neural network'}); you set query param values update is triggered like setstate().setqueryparams() does have need asynchronous variation.important a value is a query param not put in state. query param should own value be source truth the value.defaultqueryparams (optional)semantically similar react defaultprops.import reactqueryparams 'react-query-params';export default class myapp extends reactqueryparams { defaultqueryparams = { game: '' }}when define default value query param be omitted the url it's value is available like other query param.clean url's defaultqueryparams defining defaults all query params app load a clean address having explicit query string! a query param is omitted the url query string 's default value is used. you programmatically set query param its default value will removed the url query string. you programmatically set query param a non-default value will added to url.array object valuessetreact-query-params does use repeating param approach representing arrays the url, instead stringifies arrays objects url storage. saves characters, more flexible, marvelous every .const choices = ['chess', ''];this.setqueryparams({ games: choices });const = this.queryparams.game[0];clear set empty array array literal syntax []. don't set null empty string. react-query-params detects arrays objects based enclosing \"[]\" \"{}\" characters..setqueryparams({ games: [] });default value array objectreactqueryparams has built support objects arrays. however, is and one case where need stringify value yourself. setting values defaultqueryparams must stringify objects arrays yourself. json.stringify() be less error prone to it.defaultqueryparams = {games: json.stringify(['chess',''])}getqueryparam(name, source) (optional)method getqueryparam() reads param value a but can specify alternate source. instance can read future query param values react lifecycle hook componentwillreceiveprops().componentwillreceiveprops(nextprops) {const myparamval = .getqueryparam('myparam', nextprops);}supportjeff butschsoftware engineer netflixemail jbutsch@netflix.comtwitter @jeff3dxlicense: mit"
}