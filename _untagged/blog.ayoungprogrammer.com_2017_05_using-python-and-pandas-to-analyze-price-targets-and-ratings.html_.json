{
	"_id": "14424612",
	"site": "http://blog.ayoungprogrammer.com/2017/05/using-python-and-pandas-to-analyze-price-targets-and-ratings.html/",
	"title": " Using Python and Pandas to Analyze Price Targets and Ratings",
	"author": "youngprogrammer",
	"date": "2017-06-16T07:57:53.267Z",
	"tags": [],
	"content": "ayoungprogrammer's bloglearnings a young programmer * archive * meusing python pandas analyze price targets ratingscategories uncategorizedmay 26, 2017introduction recently began investing was wondering good analysts are predicting future a company. here is short data analysis my curiosity! short, will answering hypotheses: 1. price targets accurately reflect future price a company. 2. analysts predict better others. 3. buy outperform rating on average predict stock moving . 4. analyst ratings are better others. 5. we were invest in stocks buy/outperform ratings, can beat market. price target is price financial analyst believes a stock reach a .a performance ratingis rating financial analyst assigns stock comes their combined research analysis the company.methodologysince investments are mostly canada, will focusing canadian equities. reduce amount noise, looked companies the following conditions: * listed the tsx * market cap $1 billion * stock price $5 source data companies be found here:http://www.theupside.ca/list-tsx-stocks-market-capitalization/. source code be found here: http://github.com/ayoungprogrammer/price-targetsnext, get price targets performance ratings, used marketbeatand stock price information, used unofficial yahoo finance api. restriction is marketbeat had ratings the last 2 years it should enough data look at enough ratings. each analyst rating assignment, looked the 10 average centered around it was assigned the 10 days average centered around year time. some webscraping html/json parsing have dataframe sample rows:tickeranalysttargetratingaver_close_at_analysisanalysis_dateaver_close_at_12m12m_date0rytd securities78.00hold70.2828562016-03-0297.8328572017-03-021ryscotiabank77.00outperform70.2828562016-03-0297.8328572017-03-022rytd securities80.00buy69.0299992016-02-2597.6562512017-02-25each row corresponds a rating issued an analyst the following attributes: * ticker: ticker symbol * analyst: analyst rated * target: target price issued analyst * rating: rating issued analyst * aver_close_at_analysis: 10 days average stock price centered analysis date * analysis_date: the analysis was issued * aver_close_at_12m: 10 days average stock price centered 12 months analysis date * 12m_date: 1 from analysis dateresults can calculate error between target price actual price follows:let\\( t = \\) target price,\\(p_0 = \\) price analysis,\\(p_1 = \\) price 12 years analysis\\(error = 100 \\times \\frac{t p_0}{p_0} \\frac{p_1 p_0}{p_0} \\)intuitively, is difference percentage change the prediction the actual. example, error = 5 means target price was 5% higher then actual percentage change. code:df['target_perc'] = (df['target'] - df['aver_close_at_analysis'])/df['aver_close_at_analysis'] * 100df['real_perc'] = (df['aver_close_at_12m'] - df['aver_close_at_analysis'])/df['aver_close_at_analysis'] * 100df['error'] = (df['target_perc']-df['real_perc'])df['abs_error'] = abs(df['error'])tickeranalysttargetaver_close_at_12mtarget_percreal_percerror0rytd securities78.0097.83285710.98012239.198750-28.2186271ryscotiabank77.0097.8328579.55730039.198750-29.6414492rytd securities80.0097.65625115.89164341.469292-25.577649a quick glance the data shows some the ratings very high variance. therefore, should try reduce noise our error measurement getting rid some outliers. will so removing outliers the 10th 90th percentiles. also remove analysts less 100 ratings, we compare most important analysts. pandas, can easily group data analyst aggregate attributes different functions:def filter_tail(data, p1=10, p2=90): q1 = np.percentile(data, p1) q3 = np.percentile(data, p2) return data[(data > q1) & (data < q3)]analysts = df.groupby(['analyst'], as_index=false)['error'].agg({ 'mean_abs_err': lambda xs:np.mean(np.abs(filter_tail(xs))), 'count': 'count', '10p': lambda xs: np.percentile(xs, q=10), '90p': lambda xs: np.percentile(xs, q=90), 'mean': lambda xs: np.mean(filter_tail(xs)), 'std': lambda xs: np.std(filter_tail(xs)), })analysts = analysts[analysts['count'] > 100].sort_values(='mean_no_outliers')analyststdmeanmean_abs_err10p90pcount48national bank financial16.365463-2.53216413.425469-40.09249130.0747292513bmo capital markets18.982738-2.28236614.435614-55.86663735.6788342487barclays plc16.120963-0.58609013.128664-35.65792037.85397121220desjardins18.972093-0.54221415.355082-49.56390733.31250911512canaccord genuity18.1010544.70344714.967193-35.79579847.36322030210cibc19.0987234.96011915.799013-31.11320448.40929744658royal bank canada18.1988465.54486415.402881-34.36224750.26875458466td securities20.1790275.86884917.002451-44.25442747.65574855154raymond james financial, inc.21.5001477.58074818.711069-42.02528051.28489626962scotiabank18.7359607.74104815.962621-32.35140853.038985706we also plot means standard deviations error plots: the aggregate table, see barclays plc has least mean absolute error, .e., error is closest 0 is most accurate. barclays plc has tightest standard deviation, it is the precise. however, see the standard deviations each analyst is very large; the precision each analyst is very low. barclays plc has standard deviation 16% we interpret 95% price targets be +/- 32% off. example, td bank current stock price is $100 barclays plc gives price target $100, we reasonably expect is stock price range ~$70 ~$130.thus can answer first hypotheses: 1. analysts are average, accurate their predictions their mean error close 0. however, price targets cannot precisely predict future a company 12 months. 2. according the data, barclays plc has most accurate precise price targets, only a small margin. more intuitive image precision vs accuracy:next, will at analyst ratings explore relation stock performance.using pandas again, can easily filter price targets no rating only the ratings analysts care (in previous table). can easily group each analyst rating aggregate different functions different attribute.ratings = df[(df['rating'] != 'nan') & (df['analyst'].isin(analysts['analyst']))]ratings_agg = ratings.groupby(['analyst', 'rating'], as_index=false).agg({ 'error': { 'mae': lambda xs: np.mean(np.abs(filter_tail(xs))), }, 'real_perc': { 'mean': 'mean', 'median': 'median', '10p': lambda xs: np.percentile(xs, 10), '90p': lambda xs: np.percentile(xs, 90), 'count': 'count', }, 'target_perc': { 'median': 'median', '10p': lambda xs: np.percentile(xs, 10), '90p': lambda xs: np.percentile(xs, 90), } })ratings_agg.columns = list(map('_'.join, ratings_agg.columns.values))ratings_agg[ratings_agg['real_perc_count'] > 10]attributes: * target_perc_10p: 10th percentile price target change percentage * target_perc_90p: 90th percentile price target change percentage * tarc_perc_median: median perice target change percentage * error_mae: mean absolute error * real_perc_10p: 10th percentile real price change percentage * real_perc_90p: 90th percentile real price change percentage * real_perc_median: median real price change percentage * real_perc_count: number ratings * real_perc_mean: mean real price change percentagesample rows:analyst_rating_target_perc_10ptarget_perc_90ptarget_perc_medianerror_maereal_perc_10preal_perc_countreal_perc_meanreal_perc_90preal_perc_median0bmo capital marketsmarket perform-0.24954223.0494167.82642917.048387-13.6240288229.30626986.57110911.9625942bmo capital marketsoutperform9.33328934.09131018.86321613.267287-13.43022011622.21540164.71122315.1090945barclays plcequal weight-5.96463610.8349894.67284411.317883-23.5408327211.51175437.4612449.239600now take analyst ratings at least 20 then sort stock performance (change stock price a ). we take top 10 perform more analysis those.top_ratings = ratings_agg[ratings_agg['real_perc_count'] > 20]top_ratings = top_ratings.sort_values('real_perc_mean', ascending=false)top_ratings['analyst_rating'] = top_ratings['analyst_'] + ' ' + top_ratings['rating_']top_analyst_ratings = top_ratings['analyst_rating'].head(10)top_analyst_ratingssorted real price change percentage:analyst_rating_target_perc_10ptarget_perc_90ptarget_perc_medianerror_maereal_perc_10preal_perc_countreal_perc_meanreal_perc_90preal_perc_mediananalyst_rating32national bank financialsector perform0.27782745.3371018.69565114.170428-5.7380968129.88759661.18229317.410111national bank financial sector perform0bmo capital marketsmarket perform-0.24954223.0494167.82642917.048387-13.6240288229.30626986.57110911.962594bmo capital markets market perform54td securitiesaction list buy18.33372477.70195438.00183019.629657-0.8937053628.33403871.45949515.928740td securities action list buy21canaccord genuitybuy8.34073561.22620324.08597418.796959-16.56173317727.08669086.23446418.039215canaccord genuity buy31national bank financialoutperform7.70553953.57934318.92963312.407454-1.52692511524.52442859.09362822.213398national bank financial outperform2bmo capital marketsoutperform9.33328934.09131018.86321613.267287-13.43022011622.21540164.71122315.109094bmo capital markets outperform14cibcsector outperformer9.71464859.84648133.65224321.688542-14.5185624422.20502260.02093222.218981cibc sector outperformer43royal bank canadasector perform-0.67878836.51616811.10198313.099112-11.59006022021.33016051.28220110.498096royal bank canada sector perform36raymond james financial, inc.outperform9.43780454.48369321.23652215.914385-18.69577610620.77383559.15984413.004491raymond james financial, inc. outperform49scotiabankoutperform7.23995550.40248519.08214115.926344-21.63287524618.40788551.02315914.897374scotiabank outperformwe make error plot the mean standard deviation the real percentage change each analyst rating: can that stocks the top analyst ratings up average 25% a which is very . based the error plot, td security action list buy seems perform best terms high mean lower variance. although is high variance, mean is more meaningful this case. we were invest $1000 each the stocks were given rating, would about $1250 average a , which is we really care . the tsx index went 11% tsx index annualized return is 9.1%. were actually beating market ~16% this strategy!however, keep mind this data is the last 2 years is indicative future performance. the hand, believe strategy make sense since analysts put significant effort research their rating also of influence the rating. probably trust analysts would likely invest knowing the stock has good rating thus self fulfilling rating. this analysis, can conclude last 3 hypotheses:3. buy outperform rating on average up average 15-20%.4. td security action list buy appears be strongest indicator a stock perform .5. we buy stocks the top 10 ratings they issued sell exactly year, will beat market ~16%.conclusion * price targets arent good indicator where price a stock go. * top performance ratings are good indicator a stock performing . * you possibly beat market only buying stocks sector outperforms buy ratings.please keep mind i am no means financial expert am certified give financial advice. the code be found here: https://www.github.com/ayoungprogrammer/price-targetsanalyst ratingsdata sciencefinancepandasprice targetpythonstock quotes3 comments3 comments * * davidjune 1, 2017reply great article btw. github link isnt working * * ayoungprogrammerjune 15, 2017reply fixed. thanks letting know! * * * * urbanjune 1, 2017reply coool * * leave reply cancel reply email address not published. required fields are marked *post comment proudly powered wordpresstheme moyu"
}