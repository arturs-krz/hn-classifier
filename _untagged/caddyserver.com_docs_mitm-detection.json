{
	"_id": "14487891",
	"site": "https://caddyserver.com/docs/mitm-detection",
	"title": " Detecting HTTPS Interception",
	"author": "mholt",
	"date": "2017-06-16T07:56:42.323Z",
	"tags": [],
	"content": "featuresdownloadpricingdocumentationforumgithubget involvedlog inuser guidedocumentationtutorialsexamplesusing caddy * getting started * command line interface * caddyfile syntaxhttp server * http caddyfile * automatic https * mitm detection * placeholders * template actionsstandard http directives * basicauth * bind * browse * errors * expvar * ext * fastcgi * gzip * header * import * index * internal * limits * log * markdown * mime * pprof * proxy * push * redir * rewrite * root * shutdown * startup * status * templates * timeouts * tls * websocketplugins * writing caddy plugindns providers * tls.dns.cloudflare * tls.dns.digitalocean * tls.dns.dnsimple * tls.dns.dnspod * tls.dns.dyn * tls.dns.exoscale * tls.dns.gandi * tls.dns.googlecloud * tls.dns.linode * tls.dns.namecheap * tls.dns.ovh * tls.dns.rackspace * tls.dns.rfc2136 * tls.dns.route53 * tls.dns.vultrdirectives/middleware * http.authz * http.awslambda * http.cgi * http.cors * http.datadog * http.expires * http.filemanager * http.filter * http.git * http.hugo * http.ipfilter * http.jwt * http.login * http.mailout * http.minify * http.prometheus * http.proxyprotocol * http.ratelimit * http.realip * http.upload * net.hostevent hooks * hook.serviceserver types * dns * netdetecting https interceptioncaddy has ability detect certain man--the-middle (mitm) attacks https connections may otherwise invisible the browser the end user. means caddy determine whether is \"likely\" \"unlikely\" a tls proxy is actively intercepting https connection. connection(loading) seems likely your connection is actively being intercepted a tls proxy. connection is probably private! (read rest this page learn possible false positives.)phew! looks your connection this website is being intercepted. (read rest this page learn possible false negatives.) connection is over https, caddy cannot detect there is man--the-middle, although without encryption probably is .all incoming https connections are automatically checked tampering using techniques described durumeric, halderman, et. al. their ndss '17 paper. results the inspection are exposed various ways throughout caddy you choose to handle suspected mitm attack your clients. (keep mind many tls proxies the form \"benevolent\" antivirus firewall products.)tls connections are being intercepted are secure, despite software vendor advertisements the contrary. degree which respond a suspected mitm attack is to and depends the nature your site, audience, political circumstances. might respond suspected https interception any these ways ( order increasing ostentatiousness): * log it happened using {mitm} placeholder a custom log format. * you're using templates, display warning the user your website using {{.ismitm}} template action. * perform internal rewrite the uri a dedicated warning, error, informational page. * redirect user another page site. * close connection immediately an empty response (coming soon, maybe).please read entire page before implementing measures might considered extreme.disclaimer caddy authors, maintainers, contributors make good-faith attempt keep feature working correctly commonly-used versions mainstream browsers, cannot guarantee perfect accuracy. feature relies hard-coded heuristics attempt identify browsers the tls handshake. browser os updates may render heuristics obsolete any . the caddy developers are responsible any damages, costs, miscommunications, misunderstandings, other consequences may result using feature. with wisdom at own risk.supported clientscaddy is programmed protect recent versions chrome, firefox, ie/edge, safari.false positivescaddy may, occasion, incorrectly flag connection \"likely\" intercepted if is . this usually happens clients spoof user-agent string. the best possible protection, recommend users not change user-agent header that site owners keep caddy updated. is possible there is browser/platform combination is yet considered. report false positive, please file issue your real, unmodified user-agent string, browser version, os/platform details, raw clienthello bytes, any relevant build information. must be certain your connection was made a trusted network is being firewalled proxied that os \"security\" products are completely disabled your machine the local network. ( must convince that connection was actually secure, we to able reproduce report.)false negatives https interception is occurring caddy is able detect (an \"unlikely\" classification), could a number reasons. least most ominous: * could simply that caddy's detection heuristics are comprehensive enough. please file issue long you provide enough information catch interception, including clienthello bytes as many details the mitm software are known. * client is sending recognized user-agent header. except a few limited exceptions, caddy checks mitm major browsers. * tls proxy is preserving original properties the tls handshake between client the server. scenario is the worst false negative at least browser be able show warning the tls connection is weak. * tls proxy is modifying stripping user-agent header, perhaps an attempt hide. however, tls proxy modifies http requests runs risk breaking http, would expose presence (similar how gravity exposes black holes).caddy's mitm detection features mainly tls proxies are implemented carelessly, documented poorly, updated sparingly.sponsors project matthew holt part light code labsthe projectfeaturesdownloadgithubdocsbrand kitproductssponsorshipsengineering packagepricingterms serviceaccountlog insign upcommunityforumgithubtwitterbloghey, .be notified new releases!Â© 2015-2017 light code labs. rights reserved."
}