{
	"_id": "14409553",
	"site": "https://www.browseemall.com/Blog/index.php/2017/05/23/creating-a-cross-plattform-net-ui-application/",
	"title": " Cross Platform .NET Desktop Application Framework",
	"author": "AlikhanPeleg",
	"date": "2017-06-16T07:57:57.331Z",
	"tags": [],
	"content": "support blog free resources browseemall cross browser testing try mobile navigation * home * tour * pricing * schedule demo email please enter email address'll never sell share email address! read privacy policy blog love talk! may tue browseemall/cross browser testing creating cross-platform .net ui application * 5-23-2017 * more 3 years our company has developed sold desktop application cross-browser testing called browseemall. we started we developed application using .net framework means application was capable running the microsoft windows platform. more more web development is done other operating systems linux macos most common feature request was version could run these platforms well. we set to if could up a viable strategy make cross-platform happen without having give our existing codebase ( this is a idea general). goals detail were: * reuse much the current code possible * let application and feel native the different platforms * keep platform specific code a minimum * only single ui framework we dont end with platform specific ui codetechnology choiceluckily application is already designed using model-view-controller pattern we just rewrite view part make application cross platform using .net windows mono linux / macos. old ui was based winforms was contained lots calls native windows apis using monos winforms implementation was an option. sheer luck, stumbled onto cross-platform .net / mono ui toolkit eto.formswhich gives the ability reuse ui code across different platforms it uses native controls much possible. a few small test applications, choose eto.forms started recreating ui. of existing code, person was able do transition about 1 month effort while rest the team was able continue add features we went along.implementation gotchas few things you need keep mind you to modify .net application cross-platform compatibility.mono is a drop replacement theory, mono aims be drop- replacement the .net framework it works reasonable for . but still few things fall your feet unexpected ways: * need make sure handle paths correctly your application. always path.combine dont hard-code platform specific path separators anywhere. * things look why porting mono * build application bundle macos need mac xcode. * mono is available a 32bit build macos ( can build 64bit version yourself). need platform specific installers the installation the application, will need separate installers. used innosetup windows, simple dmg image macos currently deb/rpm package linux distributions.platform specific code cannot fully avoided did manage avoid platform specific code fully it turns detecting platform are running is trivial all. used which seems work quite :[dllimport(\"libc\")]static extern int uname(intptr buf);public static platform runningplatform(){ switch (environment.osversion.platform) { case platformid.unix: { intptr buf = intptr.zero; try { buf = marshal.allochglobal(8192); // is hacktastic of getting sysname uname () (uname(buf) == 0) { string os = marshal.ptrtostringansi(buf); (os == \"darwin\") return platform.mac; } } catch { } finally { (buf != intptr.zero) marshal.freehglobal(buf); } return platform.linux; } case platformid.macosx: return platform.mac; default: return platform.windows; }}code template make things easier anybody starting with we created simple template a baseline a cross-platform .net / mono application using eto.forms. can find code this repository.results in , we are quite happy the version our software. experience mostly same across targeted platforms we quite few happy users already running browsemall an -premise solution cross-browser testing. feel free share own wisdom the comments!image keckobrowser testing everyoneautomated & manual browser testing - premisestart 14- free trial * to run selenium tests android ios * run internet explorer mac os x without using * 8 tools load test website * 3 free methods internet explorer cross browser testing commentsleave reply cancel reply email address not published.commentname email search newsletteremail ! thank ! categories * browseemall * browsernews * browsers * cross browser testing * selenium * uncategorised * web development archive * may 2017(2) * february 2017(2) * january 2017(3) * december 2016(1) * november 2016(4) * october 2016(2) * may 2016(1) * april 2016(1) * february 2016(5) * january 2016(3) * december 2015(3) * november 2015(73) * october 2015(4) * september 2015(5) * august 2015(4) * july 2015(7) * june 2015(5) * may 2015(11) * april 2015(6) * january 2015(2) * september 2014(3) * august 2014(4) * july 2014(4) * june 2014(5) * may 2014(3) * april 2014(2) * march 2014(2) * february 2014(1) * january 2014(1) * september 2013(1) * august 2013(1) * june 2013(1) * april 2013(2) * february 2013(1) * january 2013(1) * november 2012(1) * october 2012(3) * august 2012(2) * july 2012(2) * june 2012(1) * april 2012(1) * march 2012(5) * february 2012(1) * january 2012(1)subscribe via rss feed follow on * twitter * facebook * linkedin contact * support@browseemall.com * baumgartnerstr. 21, 86161 augsburg, germany usmaking web testing easier step a ! we create content, tools solutions better web development testing! to top copyright 2015 Â© position fixed ug * contact * privacy policy * imprint"
}