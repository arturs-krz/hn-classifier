{
	"_id": "14497139",
	"site": "https://devops-security-checklist.sqreen.io/",
	"title": " The DevOps Security Checklist",
	"author": "ecares",
	"date": "2017-06-16T07:56:40.750Z",
	"tags": [],
	"content": "* culture * infrastructure * code * protection * monitoringstay to date major changes the list share * * * a project progress: 0% * culture * code * infrastructure * protection * monitoringshare * * * a project the devops security checklistsecurity is increasingly becoming responsibility devops teams. movements devsecops are contributing this change. security checklist aims give devops professionals list security best practices can follow according their company stage.devops teams security decisions several times, everyday! security is moving target. applicable recommendations a series b company not relevant an early stage company.select company stage use rules improve security. list is far being exhaustive. feel free contribute directly github! view * early stage/series * series b * post-series bculture * cover ass series b is a question if when. evaluate risks, prepare proper action plan case a breach communicate properly the fact. https://blog.serverdensity.com/-to-write--postmortem/ https://codeascraft.com/2012/05/22/blameless-postmortems/ https://blog.sqreen.io/cybersecurity-risk-assessment--startup-cto/ * follow onboarding / offboarding checklist post series b checklist should contain list all steps need enforce an employee, contractor, intern, etc joins company. similar list also used the someone is leaving team. https://www.rippling.com/ https://.gitlab.com/handbook/general-onboarding/ https://.gitlab.com/handbook/offboarding/ * gamify security train employees a regular basis series b humans are weakest links the security chain. devops contribute the security awareness all employees a company. explaining an attacker infiltrate company, will increase awareness thus minimize chance a hack. dont forget fishing spear-fishing attacks. https://www.schneier.com/blog/archives/2008/03/the_security_mi_1.html http://www.govtech.com/blogs/lohrmann--cybersecurity/ten-recommendations--security-awareness-programs.html http://lifehacker.com/5933296/-can--protect-against-hackers--use-sneaky-social-engineering-techniques--get--my-accounts * stay top best practices series devops is ever-changing landscape. ensure you stay to date terms new technologies, vulnerabilities best practices. https://aws.amazon.com/whitepapers/architecting--the-aws-cloud-best-practices/ https://docs.microsoft.com/en-/azure/security/azure-security-network-security-best-practices http://webopsweekly.com/ * understand risk series the cost breaches is drastically increasing security should taken seriously inside organization. devops engineers should play important role advocating better security practices http://www.nttcomsecurity.com//uploads/documentdatabase/us_report_risk_value_public_approved_v2.pdf http://fortune.com/2016/06/15/data-breach-cost-study-ibm/ https://www.troyhunt.com/-emergence--historical-mega-breaches/ send the whole checklist & updates! code * don't implement own crypto post series b problem cryptography is, you dont you are wrong until are hacked. dont your own crypto. standards instead. https://en.wikipedia.org/wiki/bcrypt http://crypto.stackexchange.com/questions/43272/why-is-writing--own-encryption-discouraged https://download.libsodium.org/doc/ https://blogs.dropbox.com/tech/2016/09/-dropbox-securely-stores--passwords/ * ensure are using security headers series modern browsers support set headers dedicated block certain types attacks. sure properly implemented security headers. dont forget the csp. https://securityheaders.io/ https://myheaders.sqreen.io/ https://blog.appcanary.com/2017/http-security-headers.html * hack yourself post series b your company doesnt yet structured security team, help create multidisciplinary red team stress application infrastructure. providing easy environment the red team attack application should part the scope devops. http://www.devsecops.org/blog/2015/12/10/red-team-pwning--hearts--minds--ticket--a- * integrate security scanners your ci pipeline series b integrate dynamic application security testing (dast) tool your ci, just sast aware the high number false positives. http://www.arachni-scanner.com/ https://www.owasp.org/index.php/owasp_zed_attack_proxy_project https://www.acunetix.com/vulnerability-scanner/ * keep dependencies to date series third-party libraries put application risk. sure track vulnerable packages update regularly. https://www.sqreen.io/ https://pyup.io/ https://snyk.io/ https://nodesource.com/products/certified-modules * protect ci/cd tools your product post series b continuous deployment pipeline is backbone your . security should checked each step. ci builds should fail you detect security vulnerability. store ci configuration traceability audit. https://wiki.jenkins-ci.org/display/jenkins/jobconfighistory+plugin https://www.slideshare.net/kponiatowski/-cicd-teams--time--security--do- * run security tests your code series static application security testing (sast) is easy fast to find security vulnerabilities your code. can enforce sast security checks your ci, be aware the high number false positives can frustrate developers. https://www.owasp.org/index.php/source_code_analysis_tools https://github.com/mre/awesome-static-analysis https://docs.travis-ci.com/user/coverity-scan infrastructure * automatically configure & update servers series b automated configuration management tool helps ensure your servers are updated secured. chef: https://learn.chef.io/tutorials/ puppet: https://www.digitalocean.com/community/tutorials/-to-install-puppet-4--a-master-agent-setup--ubuntu-14-04 ansible: http://docs.ansible.com/ansible/intro_getting_started.html salt: https://docs.saltstack.com/en/latest/topics/tutorials/walkthrough.html * backup regularly series your data is likely be businesss precious asset. sure to lose . implement proper backups check backup integrity. mongodb backup: https://docs.mongodb.com/manual/core/backups/ postgresql: https://www.postgresql.org/docs/current/static/backup.html linux: http://www.tecmint.com/linux-system-backup-tools/ https://www.dataone.org/best-practices/ensure-integrity--accessibility--making-backups-data * check ssl / tls configurations series use free tools scan infrastructure regularly make sure ssl configurations are correct. https://observatory.mozilla.org/ https://www.ssllabs.com/ https://diogomonica.com/2015/12/29/-double-f--double-/ * control access your cloud providers series the best to protect services (database, file storage) is not passwords all. the built- identity access management (iam) functions securely control access your ressources. http://docs.aws.amazon.com/iam/latest/userguide/introduction.html https://cloud.google.com/compute/docs/access/create-enable-service-accounts--instances * encrypt the things post series b ssl performance problems are myth you dont any reasons to ssl all public services. https://letsencrypt.org/ https://certbot.eff.org/ https://www.digitalocean.com/community/tutorials/-to-secure-nginx--let-s-encrypt--ubuntu-14-04 https://www.digitalocean.com/community/tutorials/-to-secure-apache--let-s-encrypt--ubuntu-14-04 * harden ssh configurations post series b ssh is defacto remote login mechanism linux environments. s the de facto penetration vector hackers. sure have proper ssh configurations. https://devops.profitbricks.com/tutorials/secure--ssh-server--ubuntu/ https://www.digitalocean.com/community/tutorials/-to-set--ssh-keys2 * keep containers protected series b docker ( kubernetes), ensure they are patched secure. tools automatically update scan containers security vulnerabilities. https://www.docker.com/docker-security https://docs.docker.com/docker-cloud/builds/image-scan/ https://jpetazzo.github.io/2015/05/27/docker-images-vulnerabilities/ https://www.slideshare.net/michaelcherny/security-best-practices--kubernetes-deployment * log the things series infrastructure logs application logs are most precious allies investigating data breach. sure logs are stored somewhere safe central. make sure whitelist- blacklist-specific incoming data avoid storing personally identifiable information (pii) data. https://qbox.io/blog/welcome--the-elk-stack-elasticsearch-logstash-kibana https://www.loggly.com/ * manage secrets dedicated tools vaults post series b you need store cryptographic secrets ( than database password, tls certificate, ) perform encryption them, should dedicated tools. way cryptographic secret never leaves tool you auditing features. https://www.vaultproject.io/ https://github.com/square/keywhiz https://aws.amazon.com/cloudhsm/ https://aws.amazon.com/kms/ * store encrypted passwords your configuration management series b storing passwords ( databases ones) be done a dedicated database restricted access. other solution is store encrypted your source code management (scm) system. way, just need master key decrypt . chef: https://github.com/chef/chef-vault puppet: https://puppet.com/blog/encrypt--data-using-hiera-eyaml salt: https://docs.saltstack.com/en/latest/ref/renderers//salt.renderers.gpg.html ansible: http://docs.ansible.com/ansible/playbooks_vault.html * upgrade servers regularly series server packages libraries are often updated security vulnerabilities are found. should update as soon a security vulnerability is found. https://www.ubuntu.com/usn/ https://help.ubuntu.com/community/automaticsecurityupdates https://access.redhat.com/security/vulnerabilities * an immutable infrastructure post series b immutable infrastructures avoid having manage update servers. https://martinfowler.com/bliki/immutableserver.html https://hackernoon.com/configuration-management-is--antipattern-e677e34be64c#.n68b1i3eo protection * dont store credit card information ( you dont need ) series use third-party services store credit card information avoid having manage protect . https://stripe.com/ https://www.braintreepayments.com https://www.pcisecuritystandards.org/pdfs/pciscc_ten_common_myths.pdf https://medium.com/@folsen/accepting-payments-is-getting-harder-1b2f342e4ea#.897akko4q * enforce -factor authentication (2fa) post series b enforce 2fa all services used (whenever possible). https://duo.com/ https://auth0.com/ https://nakedsecurity.sophos.com/2016/08/18/nists--password-rules--you-need--know/ * ensure compliance relevant industry standards post series b comply standards ensure follow industry best practices answer customer needs. simple compliance never protect apps. https://cloudsecurityalliance.org/ https://en.wikipedia.org/wiki/iso/iec_27001:2013 https://en.wikipedia.org/wiki/payment_card_industry_data_security_standard * a public bug bounty program series b bug bounty program allow external hackers report vulnerabilities. of bug bounties program set rewards place. need security aware inside development teams evaluate reports receive. https://www.tripwire.com/state--security/vulnerability-management/launching--efficient--cost-effective-bug-bounty-program/ https://www.hackerone.com/ https://bountyfactory.io/en/index.html * a public security policy series this is page your corporate website describing you plan respond external security reports. should advise support responsible disclosure. keep mind most the reports you receive probably wont relevant. https://www.intercom.com/security https://www.zendesk.com/product/zendesk-security/ https://www.apple.com/support/security/ * protect against denial service (dos) series b dos attacks are meant break application make unavailable your customers. a specific service protect app against distributed denial service attacks. https://www.akamai.com/ https://www.cloudflare.com/ddos/ https://www.ovh.com//news/articles/a1171.protection-anti-ddos-service-standard * protect applications against breaches series detect block attacks real- using protection solution. the owasp top-10 vulnerabilities (sql injections, nosql injections, cross-site scripting attacks, code/command injections, etc.) are covered. https://www.sqreen.io/ https://en.wikipedia.org/wiki/web_application_firewall * protect servers infrastructure series your servers be scanned order fingerprint application locate open services, misconfiguration, etc. can setup tools keep scanners away your servers. https://www.digitalocean.com/community/tutorials/-to-protect-ssh--fail2ban--ubuntu-14-04 * protect users against account takeovers series account takeovers brute force attacks are easy setup. should sure users are protected against account takeovers. https://www.owasp.org/index.php/blocking_brute_force_attacks https://security.stackexchange.com/questions/94432/should--implement-incorrect-password-delay--a-website--a-webservice https://www.sqreen.io/ monitoring * audit infrastructure a regular basis series with cloud providers, s easy start instances forget them. will need create maintain list your assets (servers, network devices, services exposed etc), review regularly determine you still need , keep up date, ensure they benefit your latest deployments. http://docs.aws.amazon.com/general/latest/gr/aws-security-audit-guide.html http://searchenterpriselinux.techtarget.com/tip/creating--inventory--nmap-network-scanning https://github.com/netflix/security_monkey * check tls certificates are set expire series you should using tls certificates. can a hassle configure monitor dont forget renew ! https://www.ssllabs.com/ https://serverlesscode.com/post/ssl-expiration-alerts--lambda/ * detect insider threats series the important attacks come insider threats. those be users attackers gaining access privileged user accounts. sure monitor users detect attackers before attack happens. https://www.sqreen.io/ * notified your app is under attack series b will attacked. sure have monitoring system place will detect security events targeting application before s too late. knowing your application is starting get massively scanned is key stop more advanced attacks. https://www.linode.com/docs/security/using-fail2ban--security#email-alerts https://www.sqreen.io/ http://alerta.io/ * monitor third party vendors series youre likely use third party products manage servers / payrolls / logs even social media. like re likely be hacked, can too. sure follow news react immediately a breach. https://haveibeenpwned.com/ https://twitter.com/securitynewsbot * monitor authorizations series b proactive be alerted authorizations keys binary are changed your production. http://techblog.netflix.com/2017/03/netflix-security-monkey--google-cloud.html https://cloudsploit.com/events http://ossec.github.io/ https://security.stackexchange.com//19386 * monitor dns expiration date series just tls certificates, dns expire. sure monitor dns expiration automatically. https://github.com/glensc/monitoring-plugin-check_domain stay to date major changes the list notified major updates the list: project : protect applications. frustrate attackers. its unique -app technology, sqreen revolutionizes way devops teams protect apps intrusions & data loss! www.sqreen.io @sqreenio"
}