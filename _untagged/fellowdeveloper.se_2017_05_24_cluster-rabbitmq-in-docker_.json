{
	"_id": "14413768",
	"site": "http://fellowdeveloper.se/2017/05/24/cluster-rabbitmq-in-docker/",
	"title": " Cluster RabbitMQ in Docker (using official image)",
	"author": "pardahlman",
	"date": "2017-06-16T07:57:53.889Z",
	"tags": [],
	"content": "fellow developer cluster rabbitmq dockermay 24, 20174 minute read docker is kind technology grows you. couple months barely knew difference between container image, lately ve been exploring benefits using docker spin my local development environment it is impressive easy is getting started. this post, describe i created github repo, clusters three rabbitmq servers without building custom images it.rabbitmq docker the author rawrabbit, have vested interest rabbitmq. until point, ve been using single, local instance my development. works fine most tasks, it isnt optimal looking high availability setups clustered brokers, is de facto to run in production environments. luckily, kind scenario is docker is made docker. to cluster em? are tons images docker hub clustering rabbitmq. i started look through list, though, realized most the images havent been updated quite time. most reason cluster image found was lagging months behind. is image is kept to date: official one1. is maintained the docker community is pretty safe bet future releases. if could create rabbitmq cluster based this image? challenge accepted!spinning individual containerss easy enough spin three separate rabbitmq nodes, running side side.version: '3'services: rabbitmq1: image: rabbitmq:3-management rabbitmq2: image: rabbitmq:3-management rabbitmq3: image: rabbitmq:3-management order nodes be able cluster, must share same secret stored the .erlanng.cookie. luckily me, can set the docker container through environment variable rabbitmq_erlang_cookie. convenience, added cookie value the compose environment file, referenced to containers through valueenvironment: - rabbitmq_erlang_cookie=${rabbitmq_erlang_cookie}s . the containers should able cluster. only question is: should be done?clustering containers fact i didnt to build new image narrowed down options. first idea was have bash script could run docker-compose that invoked rabbitmqctl commands necessary cluster. however, decided it be worth adding complexity the compose file it meant it handle clustering too. i decided was mount volume contained cluster entry point, the following lines code/usr/local/bin/docker-entrypoint.sh rabbitmq-server -detachedrabbitmqctl stop_apprabbitmqctl join_cluster rabbit@rabbitmq1rabbitmqctl stopsleep 2srabbitmq-serverlets through one a * the line uses official entry point is called same argument the official image. ensures the environment variables described docker hub be honored. is run the detached flag, that runs the background. * rabbitmqctl stop_app is first part the cluster dance. is described depth here. * joining cluster. know the rabbitmq broker be reached rabbitmq1, since is name the container. * rabbitmqctl stop stops entire rabbitmq server. do , because want run in forground, that logs are captured the container * stop command returns before server is actually stopped. adding 2 seconds wait good measure-width * starting server again rabbitmq-server. time, dont need call through entry point, all configuration was already done first .the thing left do, was updating docker-compose.yml mount script use as entry point all the rabbitmq container.volumes: - ./cluster-entrypoint.sh:/usr/local/bin/cluster-entrypoint.shentrypoint: /usr/local/bin/cluster-entrypoint.shexposing cluster localhostrabbitmq communicates port 5672 default, i wanted cluster use port, too. therefore added ha proxy, open source software provides high availability load balancer proxy server front the cluster. proxy round robins between different hosts the cluster performs checks make sure the traffic is directed an active node. havent evaluated benefits the load balancer yet, with setup, will able try different clusters approaches without effort.try yourself i said the top: source code this be found github. try out tell what think.happy coding!footnotes 1. referring the official repositories docker hub, curated docker. fellow developer, 2017."
}