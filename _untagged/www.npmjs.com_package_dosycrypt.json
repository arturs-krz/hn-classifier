{
	"_id": "14511517",
	"site": "https://www.npmjs.com/package/dosycrypt",
	"title": " Dosycrypt – homemade symmetric stream cipher with tunable parameters",
	"author": "19eightyfour",
	"date": "2017-06-14T12:56:10.172Z",
	"tags": [],
	"content": "search * sign or log * log node package manager toggle navigation * npm enterprise * features * pricing * documentation * support dosycrypt dosycryptmessage verified encryption using dosy rngsinstallingnpm install dosycryptusing  const dc = require('dosycrypt');   const message = ' is  cat'  const key = ' am  kat'  const ciphertext = dc.full_encrypt( message, key );  const plaintext = dc.full_decrypt( ciphertext, key );   // works   console.log( \"message\", message, \"key\", key, \"ciphertext\", dc.encode( ciphertext ), \"plaintext\", plaintext );   // errors due  wrong key  data corruption, message verification works   const error_1 = dc.full_decrypt( ciphertext, key + '' );  const error_2 = dc.full_decrypt( ciphertext + '', key );design * hash function is based sponge construction ( example, keccak / sha-3 uses ) * security level is customizable, simple change rng1 ( cipher ) rng2 ( hash ) values. current values are d451 d453 respectively. * uses simple effective dosy rngs pass practrand * symmetric stream cipher 120-bits entropy ( hashed 120 bits ) iv 256-bits hash the message format protection against attacks seek obtain information the internal state ( therefore key ) using messages similar sequences encrypted the same key. iv essentially makes keystream each message unique. * main strength this cipher is believed be the mixing function the rng is , and recovery the internal state the keystream is impractical. internal state be set any size.possible modification enhanced security * possible attack use fact the round function outputs byte calculated summing the bytes the internal state. tho is unlikely much information pass a 360 bit internal state an 8 bit output byte, possible mediation this be copy 'r' ( reserved ) , 'c' ( capacity ) sections the sponge construction, the rng round function, that output byte by summing the internal state the 'r' section, omitting internal state the 'c' section, while leaving rng round function unchanged save this additional summation. tho entire state is mixed, only information the 'c' section come how was mixed the 'r' section, not being directly transmitted through summation. would appear make likelihood effectiveness any attack seeks recover information the internal state, much less likely. cases limitations cipher is designed short messages ( less 4k ). reason is it is slow ( round function the rng is slow ), also the rngs only been tested to 64 mb output. while biases were detected practrand, while is believed rngs continue perform excellently the petabyte scale keystreams, don't advise using for long messages since rngs not been tested above 64 mb the round function is slow. this within firewallcombine open-source packages your private code publish a private registry behind firewall. npm enterprise developers? learn more * dosy published 2017-06-08t02:51:04.884z * 1.0.0is latest release * github.com/dosaygo-coder-0/dosycrypt * mit ® collaborators list * stats * 0downloads the last * 36downloads the last week * 36downloads the last month * an issue? file . on github * github try out * test dosycrypt your browser.keywords encryption, dosy, dosycrypt dependencies (1) dosy need help * documentation * support / contact * registry status * website issues * cli issues * security npm * npm, inc * jobs * npm weekly * blog * twitter * githublegal stuff * terms use * code conduct * package name disputes * privacy policy * reporting abuse * policiesnpm loves you"
}