{
	"_id": "14447436",
	"site": "http://t4t5.github.io/sweetalert/",
	"title": " Sweet Alerts",
	"author": "iopuy",
	"date": "2017-06-16T07:57:30.042Z",
	"tags": [],
	"content": "sweet alert beautiful replacement javascript's \"alert\"downloadso... does do?heres comparison a standard error message. first uses built- alert-function, while second is using sweetalert.normal alertshow error messagecode:alert(\"oops... something went wrong!\");sweet alertshow error messagecode:sweetalert(\"oops...\", \"something went wrong!\", \"error\");pretty cool huh? sweetalert automatically centers itself the page looks great matter you're using desktop computer, mobile tablet. 's highly customizeable, you see below!more examples these examples, 're using shorthand function swal call sweetalert. * basic message try !swal(\"here's message!\") * title a text under try !swal(\"here's message!\", \"'s pretty, isn't ?\") * a success message! try !swal(\" job!\", \" clicked button!\", \"success\") * warning message, a function attached the \"confirm\"-button... try !swal({   title: \"are sure?\",   text: \" will be able recover imaginary file!\",   type: \"warning\",   showcancelbutton: true,   confirmbuttoncolor: \"#dd6b55\",   confirmbuttontext: \"yes, delete !\",   closeonconfirm: false }, function(){   swal(\"deleted!\", \" imaginary file has been deleted.\", \"success\"); }); * ... by passing parameter, can execute something else \"cancel\". try !swal({   title: \"are sure?\",   text: \" will be able recover imaginary file!\",   type: \"warning\",   showcancelbutton: true,   confirmbuttoncolor: \"#dd6b55\",   confirmbuttontext: \"yes, delete !\",   cancelbuttontext: \", cancel plx!\",   closeonconfirm: false,   closeoncancel: false }, function(isconfirm){    (isconfirm) {     swal(\"deleted!\", \" imaginary file has been deleted.\", \"success\");   } else {     swal(\"cancelled\", \" imaginary file is safe :)\", \"error\");   } }); * message a custom icon try !swal({   title: \"sweet!\",   text: \"here's custom image.\",   imageurl: \"images/thumbs-.jpg\" }); * html message try !swal({   title: \"html <small>title</small>!\",   text: \" custom <span style=\"color:#f8bb86\">html<span> message.\",   html: true }); * message auto close timer try !swal({   title: \"auto close alert!\",   text: \" will close 2 seconds.\",   timer: 2000,   showconfirmbutton: false }); * replacement the \"prompt\" function try !swal({   title: \" input!\",   text: \"write something interesting:\",   type: \"input\",   showcancelbutton: true,   closeonconfirm: false,   animation: \"slide--top\",   inputplaceholder: \"write something\" }, function(inputvalue){    (inputvalue === false) return false;       (inputvalue === \"\") {     swal.showinputerror(\" need write something!\");     return false   }      swal(\"nice!\", \" wrote: \" + inputvalue, \"success\"); }); * a loader ( ajax request example) try !swal({   title: \"ajax request example\",   text: \"submit run ajax request\",   type: \"info\",   showcancelbutton: true,   closeonconfirm: false,   showloaderonconfirm: true, }, function(){   settimeout(function(){     swal(\"ajax request finished!\");   }, 2000); }); * can change theme sweetalert! try !<link rel=\"stylesheet\" type=\"text/css\" href=\"dist/sweetalert.css\"> <link rel=\"stylesheet\" type=\"text/css\" href=\"themes/twitter.css\"> download & installmethod 1: install through bower:$ bower install sweetalertmethod 2: install through npm:$ npm install sweetalertmethod 3: download sweetalert css javascript files.download files 1. initialize plugin referencing necessary files: <script src=\"dist/sweetalert.min.js\"></script> <link rel=\"stylesheet\" type=\"text/css\" href=\"dist/sweetalert.css\"> 2. call sweetalert-function the page has loaded swal({   title: \"error!\",   text: \"here's error message!\",   type: \"error\",   confirmbuttontext: \"cool\" }); configurationhere are keys you use you pass object sweetalert:argumentdefault valuedescriptiontitlenull (required) title the modal. can either added the object under key \"title\" passed the parameter the function.textnulla description the modal. can either added the object under key \"text\" passed the second parameter the function.typenullthe type the modal. sweetalert comes 4 built- types will show corresponding icon animation: \"warning\", \"error\", \"success\" \"info\". can set as \"input\" get prompt modal. can either put the object under key \"type\" passed the third parameter the function. allowescapekey true set true, user dismiss modal pressing escape key. customclassnulla custom css class the modal. can added the object under key \"customclass\".allowoutsideclickfalseif set true, user dismiss modal clicking outside .showcancelbuttonfalseif set true, \"cancel\"-button be shown, the user click to dismiss modal.showconfirmbuttontrueif set false, \"ok/confirm\"-button be hidden. sure set timer set allowoutsideclick true using , in order to annoy user.confirmbuttontext\"ok\" this change text the \"confirm\"-button. showcancelbutton is set true, confirm button automatically show \"confirm\" instead \"ok\".confirmbuttoncolor\"#aedef4\" this change background color the \"confirm\"-button (must a hex value).cancelbuttontext\"cancel\" this change text the \"cancel\"-button.closeonconfirmtrueset false you the modal stay open if user presses \"confirm\"-button. is especially useful the function attached the \"confirm\"-button is another sweetalert.closeoncanceltruesame closeonconfirm, for cancel button.imageurlnulladd customized icon the modal. should contain string the path the image.imagesize\"80x80\" imageurl is set, can specify imagesize describes big want icon be px. pass a string two values separated an \"x\". first value is width, second is height.timernullauto close timer the modal. set ms (milliseconds).htmlfalseif set true, not escape title text parameters. (set false you're worried xss attacks.)animationtrueif set false, modal's animation be disabled. possible (string) values : pop (default animation set true), slide--top, slide--bottominputtype\"text\"change type the input field using type: \"input\" ( can useful you users type their password example).inputplaceholdernullwhen using input-type, can specify placeholder help user.inputvaluenullspecify default text value you your input show using type: \"input\"showloaderonconfirmfalse set true disable buttons show something is loading.methodssweetalert comes some simple methods you call:functionexampledescriptionsetdefaultsswal.setdefaults({ confirmbuttoncolor: '#0000' }); you end using lot the same settings calling sweetalert, can setdefaults the start your program set once for !closeswal.close();close currently open sweetalert programatically.showinputerrorswal.showinputerror(\"invalid email!\");show error message validating input field, the user's data is badenablebuttons, disablebuttonsswal.disablebuttons();disable enable user click the cancel confirm buttons.contributesweetalert was created tristan edwards, can follow on twitter dribbble updates other cool projects!feel free fork sweetalert github you any features you to add!te"
}