{
	"_id": "14431733",
	"site": "https://github.com/altair-viz/altair",
	"title": "Altair: Declarative statistical visualization library for Python",
	"author": "ElliotH",
	"date": "2017-06-13T13:55:34.669Z",
	"tags": {
		"categories": [
			"development", "library"
		],
		"languages": [
			"jupyter notebook",
			"python"
		]
	},
	"content": "readme.md altairaltair is declarative statistical visualization library python.altair is developed brian granger jake vanderplas close collaboration the uw interactive data lab. altair, can spend more understanding data its meaning. altair'sapi is simple, friendly consistent built top the powerfulvega-lite json specification. elegantsimplicity produces beautiful effective visualizations a minimal amount code.altair documentationnote: altair's documentation is currently a very incomplete form; are the process creating more comprehensive documentation. stay tuned! altair's documentation site, well altair's tutorial notebooks.examplehere is example using altair quickly visualize display dataset the native vega-lite renderer the jupyter notebook: altair import chart, load_dataset# load data a pandas dataframecars = load_dataset('cars')chart(cars).mark_point().encode( x='horsepower', y='miles_per_gallon', color='origin',) python api statistical visualizationsaltair provides python api building statistical visualizations a declarativemanner. statistical visualization mean: data source is dataframe consists columns different data types (quantitative, ordinal, nominal date/).the dataframe is a tidy formatwhere rows correspond samples the columns correspond observed variables. data is mapped the visual properties (position, color, size, shape,faceting, etc.) using group- operation pandas sql. altair api contains actual visualization rendering code insteademits json data structures following vega-lite specification. convenience,altair optionally ipyvega display client-side renderings seamlessly the jupyter notebook.featurescarefully-designed, declarative python api based traitlets.auto-generated internal python api guarantees visualizations are type-checked in full conformance the vega-litespecification.auto-generate altair python code a vega-lite json spec.display visualizations the live jupyter notebook, github nbviewer.export visualizations png images, stand-alone html pages the online vega-liteeditor.serialize visualizations json files.explore altair 40 example datasets over 70 examples.installationaltair be installed the following commands:pip install altairpip install --upgrade notebook # need jupyter_client >= 4.2 sys-prefix belowjupyter nbextension install --sys-prefix --py vega using conda (conda builds may a few hours go live a release):conda install altair --channel conda-forgeexamples tutorial more information examples altair's api, the altairdocumentation. immediately download altair documentation runnable jupyternotebooks, run following code a jupyter notebook: altair import tutorialtutorial()project philosophymany excellent plotting libraries exist python, including main ones:matplotlibbokehseabornlightningplotlypandas built- plottingholoviewsvispypyggeach library does particular set things .user challengeshowever, such proliferation options creates great difficulty users they to wade through of apis find of is best the task hand. none these libraries are optimized high-level statistical visualization, users to assemble ownusing mishmash apis. individuals learning data science, forces to focus learning apis rather exploring data.another challenge is current plotting apis require user write code, for incidental details a visualization. results unfortunate unnecessary cognitive burden the visualization type (histogram,scatterplot, etc.) often inferred using basic information such thecolumns interest the data types those columns. example, you are interested a visualization two numericalcolumns, scatterplot is almost certainly good starting point. you add categorical column that, probably to encode column usingcolors facets. inferring visualization proves difficult times, simple user interface construct visualization without coding.tableau the interactive datalab'spolestar voyager are excellent examples such uis.design approach solution believe these challenges be addressed without creation yetanother visualization library has programmatic api built-rendering. altair's approach building visualizations uses layered design leverages full capabilities existing visualization libraries:create constrained, simple python api (altair) is purely declarative the api (altair) emit json output follows vega-lite specrender spec using existing visualization libraries approach enables users perform exploratory visualizations a muchsimpler api initially, pick appropriate renderer their usage case, then leverage full capabilities that renderer more advanced plotcustomization. realize a declarative api necessarily limited compared thefull programmatic apis matplotlib, bokeh, etc. is deliberate designchoice feel is needed simplify user experience exploratoryvisualization.development installaltair requires following dependencies:pandastraitletsipython visualization the ipython/jupyter notebook using vega-lite renderer, altair additionally requiresjupyter notebookipyvega you cloned repository, run following command the root the repository:pip install -e . you not wish clone repository, can install using:pip install git+https://github.com/altair-viz/altairtesting run test suite must py.test installed. run tests, py.test --pyargs altair( can omit --pyargs flag you are running tests a source checkout).feedback contribution welcome input, feedback, bug reports, contributions via altair'sgithub repository. particular, welcome companion efforts other visualization libraries render vega-lite specifications output altair. see portion the effort much bigger altair itself: vega vega-lite specifications areperhaps best existing candidates a principled lingua franca datavisualization. contribute additional examples the documentation please add update notebooks altair/notebooks/*.ipynb open pull request. sure add links 01-index.ipynb needed. thanks!whence altair?altair is brightest star the constellation aquila, along deneb vega forms northern-hemisphere asterism known the summer triangle."
}