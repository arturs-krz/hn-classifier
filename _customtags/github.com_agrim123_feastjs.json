{
	"_id": "14438160",
	"site": "https://github.com/agrim123/feastjs",
	"title": " Easy JavaScript MVC Setup",
	"author": "hitm4n",
	"date": "2017-06-13T13:06:18.591Z",
	"tags": {
		"categories": [
			"development", "web"
		],
		"languages": [
			"javascript",
			"html",
			"css"
		]
	},
	"content": "readme.md feastjsfeastjs is cli tool standardize directory structure node apps. file structure reflects of rails.motivationrecently while was working a few node apps, had manually create directory structure place files accordingly. , i came with idea creating cli tool does that me. is still dev phase needs modifications additions.installation$ [sudo] npm install -g feastjsquick start quickest to started feastjs is utilize executable feast generate application shown below:create app:$ feast myapp create : myapp create : myapp/package.json create : myapp/.env create : myapp/app.js create : myapp/gulpfile.js create : myapp/app create : myapp/db create : myapp/db/setup.js create : myapp/db/seed.js create : myapp/public create : myapp/public/js create : myapp/public/images create : myapp/public/css create : myapp/routes create : myapp/routes/routes.js create : myapp/bin create : myapp/bin/www create : myapp/app/assets create : myapp/app/controllers create : myapp/app/controllers/index_controller.js create : myapp/app/models create : myapp/app/helpers create : myapp/app/views create : myapp/app/middlewares create : myapp/db/migrations create : myapp/test/controllers create : myapp/test/helpers create : myapp/test/models create : myapp/app/assets/javascripts create : myapp/app/assets/javascripts/script.js create : myapp/app/assets/stylesheets create : myapp/app/assets/stylesheets/style.css create : myapp/app/views/index create : myapp/app/views/index/home.ejs create : myapp/app/views/error.ejs create : myapp/app/views/partials create : myapp/app/views/partials/head.ejs create : myapp/app/views/partials/footer.ejs create : myapp/test create : myapp/test/controllers/index_controller_test.js install dependencies: $ cd myapp && npm install run app: $ debug=myapp:* npm run watchinstall dependencies:$ npm install use yarn$ yarn installsetup assets:$ gulpcurrently supports postgresqlupdate .env filerun$ npm run db:setupstart app http://localhost:3000/:$ npm start watch file changes (hugely reduces pain restarting server) :$ npm run watchfile structuremyapp||____app| || |____assets| | |____javascripts| | |____stylesheets| || |____controllers| | |____index_controller.js| || |____models| || |____helpers| || |____middlewares| || |____views| |____index| | |____home.ejs| || |____partials| | |____footer.ejs| | |____header.ejs| || |____error.ejs||____db| |___seed.js| |___setup.js| || |___migrations||____test| |___controllers| || |___models| || |___helpers||_____routes| |___routes.js||____public| |____css| || |____js| || |____img||_____app.js||_____gulpfile.js||_____package.json||____node_modulescommand line options generator also further configured the following command line flags. usage: feast [options] [command] commands: help [command] |n <name> generate|g <typegenerate> <name> [listtobegenerated...] delete|d <typedelete> <name> * options: -h, --help output usage information -v, --version output version number --git add gitignoregenerate controllers$ feast generate controller static_pages index home create : /home/hitman/myapp/app/controllers/static_pages_controller.js route : 'static_pages/home' route : 'static_pages/index' invoke test_unit create : /home/hitman/myapp/test/controllers/static_pages_controller_test.js invoke helper create : /home/hitman/myapp/app/helpers/static_pages_helper.js invoke js create : /home/hitman/myapp/app/assets/javascripts/static_pages.js invoke css create : /home/hitman/myapp/app/assets/stylesheets/static_pages.css invoke ejs create : /home/hitman/myapp/app/views/static_pages create : /home/hitman/myapp/app/views/static_pages/home.ejs create : /home/hitman/myapp/app/views/static_pages/index.ejsnavigate /static_pages/indexgenerate models$ feast generate model random title:string plate:number create : myapp/app/models/random.js create : myapp/test/models/random_test.js create : myapp/db/migrations/[timestamp]_create_random.jsrun migrations ( feature is still under dev)$ npm run migrations-do add sample login signup functionality add support more css engines less|stylus|compass|sass add support more templating engines add testslicensemit"
}